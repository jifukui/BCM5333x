/*
 * $Id: chipman.pm,v 1.2 Broadcom SDK n *
 * $Copyright: Copyright 2016 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated from the registers file.
 * Edits to this file will be lost when it is regenerated.
 */
#ifndef __BCM5346X_REGS_H__
#define __BCM5346X_REGS_H__

/* Blocks */
#define IPIPE_BLOCK_ID                  1
#define EPIPE_BLOCK_ID                  2
#define MMU_BLOCK_ID                    3
#define OTPC_BLOCK_ID                   4
#define CMIC_BLOCK_ID                   5
#define MXQPORT0_BLOCK_ID               6
#define XLPORT0_BLOCK_ID                7
#define XLPORT1_BLOCK_ID                8
#define TOP_BLOCK_ID                    9
#define LLS_BLOCK_ID                    10
#define RXLP_BLOCK_ID                   11
#define TXLP_BLOCK_ID                   12
#define SER_BLOCK_ID                    13
#define IPROC_BLOCK_ID                  14
#define IECELL0_BLOCK_ID                15
#define IECELL1_BLOCK_ID                16
#define AVS_BLOCK_ID                    17
#define OAMP_BLOCK_ID                   18

/* Physical Port */
#define PHY_MXQPORT0_BASE                   1 /* physical port 1 ~ 4 */
#define PHY_XLPORT0_BASE                    5 /* physical port 5 ~ 8 */
#define PHY_XLPORT1_BASE                    9 /* physical port 9 ~ 12 */

/* XLPORT0 XLPORT1 */
#define R_RALN(port)                           (0x00001600 + (port))
#define R_RBCA(port)                           (0x00000e00 + (port))
#define R_RBYT(port)                           (0x00003d00 + (port))
#define R_RFCS(port)                           (0x00000f00 + (port))
#define R_RMCA(port)                           (0x00000d00 + (port))
#define R_ROVR(port)                           (0x00001a00 + (port))
#define R_RPKT(port)                           (0x00000b00 + (port))
#define R_RUCA(port)                           (0x00000c00 + (port))
#define R_RXPF(port)                           (0x00001100 + (port))
#define R_RX_EEE_LPI_DURATION_COUNTER(port)    (0x00003700 + (port))
#define R_RX_EEE_LPI_EVENT_COUNTER(port)       (0x00003600 + (port))
#define R_TBCA(port)                           (0x00004f00 + (port))
#define R_TBYT(port)                           (0x00006f00 + (port))
#define R_TMCA(port)                           (0x00004e00 + (port))
#define R_TOVR(port)                           (0x00005500 + (port))
#define R_TPKT(port)                           (0x00004c00 + (port))
#define R_TUCA(port)                           (0x00004d00 + (port))
#define R_TXPF(port)                           (0x00005000 + (port))
#define R_TX_EEE_LPI_DURATION_COUNTER(port)    (0x00006b00 + (port))
#define R_TX_EEE_LPI_EVENT_COUNTER(port)       (0x00006a00 + (port))
#define R_XLPORT_CNTMAXSIZE(port)              (0x00020100 + (port))
#define R_XLPORT_CONFIG(port)                  (0x00020000 + (port))
#define R_XLPORT_ECC_CONTROL                   (0x02021a00)
#define R_XLPORT_ENABLE_REG                    (0x02020b00)
#define R_XLPORT_FLOW_CONTROL_CONFIG(port)     (0x00020700 + (port))
#define R_XLPORT_LAG_FAILOVER_CONFIG(port)     (0x00020200 + (port))
#define R_XLPORT_MAC_CONTROL                   (0x02021000)
#define R_XLPORT_MAC_RSV_MASK(port)            (0x00020800 + (port))
#define R_XLPORT_MIB_RESET                     (0x02022400)
#define R_XLPORT_MODE_REG                      (0x02020a00)
#define R_XLPORT_POWER_SAVE                    (0x02020d00)
#define R_XLPORT_SOFT_RESET                    (0x02020c00)
#define R_XLPORT_TSC_PLL_LOCK_STATUS           (0x02021300)
#define R_XLPORT_WC_UCMEM_CTRL                 (0x02021900)
#define M_XLPORT_WC_UCMEM_DATA(idx)            (0x00000000+(idx))
#define R_XLPORT_XGXS0_CTRL_REG                (0x02021400)
/* EPIPE */
#define R_EGR_BYPASS_CTRL                      EPIPE_BLOCK_ID, (0x06000300)
#define R_EGR_CONFIG                           EPIPE_BLOCK_ID, (0x06000000)
#define M_EGR_EM_MTP_INDEX(idx)                EPIPE_BLOCK_ID, (0x082c0000+(idx))
#define M_EGR_ENABLE(idx)                      EPIPE_BLOCK_ID, (0x2d000000+(idx))
#define R_EGR_FLEX_CTR_COUNTER_UPDATE_CONTROL_0   EPIPE_BLOCK_ID, (0x36000000)
#define R_EGR_FLEX_CTR_COUNTER_UPDATE_CONTROL_1   EPIPE_BLOCK_ID, (0x36000100)
#define R_EGR_FLEX_CTR_COUNTER_UPDATE_CONTROL_2   EPIPE_BLOCK_ID, (0x36000200)
#define R_EGR_FLEX_CTR_COUNTER_UPDATE_CONTROL_3   EPIPE_BLOCK_ID, (0x36000300)
#define R_EGR_HW_RESET_CONTROL_0               EPIPE_BLOCK_ID, (0x02010000)
#define R_EGR_HW_RESET_CONTROL_1               EPIPE_BLOCK_ID, (0x02010100)
#define M_EGR_IM_MTP_INDEX(idx)                EPIPE_BLOCK_ID, (0x08280000+(idx))
#define R_EGR_IPMC_CFG2(port)                  EPIPE_BLOCK_ID, (0x04001000 + (port))
#define R_EGR_MIRROR_SELECT                    EPIPE_BLOCK_ID, (0x06000900)
#define M_EGR_PHYSICAL_PORT(idx)               EPIPE_BLOCK_ID, (0x04200000+(idx))
#define M_EGR_PORT(idx)                        EPIPE_BLOCK_ID, (0x041c0000+(idx))
#define M_EGR_PORT_REQUESTS(idx)               EPIPE_BLOCK_ID, (0x2d040000+(idx))
#define M_EGR_PP_PORT_GPP_TRANSLATION_1        EPIPE_BLOCK_ID, (0x08540000)
#define M_EGR_PP_PORT_GPP_TRANSLATION_2        EPIPE_BLOCK_ID, (0x18040000)
#define M_EGR_QUEUE_TO_PP_PORT_MAP(idx)        EPIPE_BLOCK_ID, (0x04300000+(idx))
#define M_EGR_VLAN(idx)                        EPIPE_BLOCK_ID, (0x08000000+(idx))
#define R_EGR_VLAN_CONTROL_1(port)             EPIPE_BLOCK_ID, (0x04000600 + (port))
#define M_EGR_VLAN_STG(idx)                    EPIPE_BLOCK_ID, (0x08040000+(idx))
#define R_TDBGC0_SELECT                        EPIPE_BLOCK_ID, (0x2e000d00)
#define R_TDBGC1_SELECT                        EPIPE_BLOCK_ID, (0x2e000e00)
#define R_TDBGC2_SELECT                        EPIPE_BLOCK_ID, (0x2e000f00)
#define R_TDBGC3_SELECT                        EPIPE_BLOCK_ID, (0x2e001000)
#define R_TDBGC4_SELECT                        EPIPE_BLOCK_ID, (0x2e001100)
#define R_TDBGC5_SELECT                        EPIPE_BLOCK_ID, (0x2e001200)
/* MXQPORT0 */
#define R_MAC_RSV_MASK(port)                   (0x00020500 + (port))
#define R_MXQ_RALN(port)                       (0x00001600 + (port))
#define R_MXQ_RBCA(port)                       (0x00000e00 + (port))
#define R_MXQ_RBYT(port)                       (0x00003400 + (port))
#define R_MXQ_RFCS(port)                       (0x00000f00 + (port))
#define R_MXQ_RMCA(port)                       (0x00000d00 + (port))
#define R_MXQ_ROVR(port)                       (0x00001a00 + (port))
#define R_MXQ_RPKT(port)                       (0x00000b00 + (port))
#define R_MXQ_RUCA(port)                       (0x00000c00 + (port))
#define R_MXQ_RXPF(port)                       (0x00001100 + (port))
#define R_MXQ_RX_EEE_LPI_DURATION_COUNTER(port)   (0x00006600 + (port))
#define R_MXQ_RX_EEE_LPI_EVENT_COUNTER(port)   (0x00006500 + (port))
#define R_MXQ_TBCA(port)                       (0x00004800 + (port))
#define R_MXQ_TBYT(port)                       (0x00006400 + (port))
#define R_MXQ_TMCA(port)                       (0x00004700 + (port))
#define R_MXQ_TOVR(port)                       (0x00004e00 + (port))
#define R_MXQ_TPKT(port)                       (0x00004500 + (port))
#define R_MXQ_TUCA(port)                       (0x00004600 + (port))
#define R_MXQ_TXPF(port)                       (0x00004900 + (port))
#define R_MXQ_TX_EEE_LPI_DURATION_COUNTER(port)   (0x00006800 + (port))
#define R_MXQ_TX_EEE_LPI_EVENT_COUNTER(port)   (0x00006700 + (port))
#define R_XLMAC_CTRL(port)                     (0x00060000 + (port))
#define R_XLMAC_EEE_CTRL(port)                 (0x00061a00 + (port))
#define R_XLMAC_EEE_TIMERS(port)               (0x00061b00 + (port))
#define R_XLMAC_LLFC_CTRL(port)                (0x00061200 + (port))
#define R_XLMAC_MODE(port)                     (0x00060100 + (port))
#define R_XLMAC_PAUSE_CTRL(port)               (0x00060d00 + (port))
#define R_XLMAC_PFC_CTRL(port)                 (0x00060e00 + (port))
#define R_XLMAC_RX_CTRL(port)                  (0x00060600 + (port))
#define R_XLMAC_RX_LSS_CTRL(port)              (0x00060a00 + (port))
#define R_XLMAC_RX_MAX_SIZE(port)              (0x00060800 + (port))
#define R_XLMAC_TXFIFO_CELL_CNT(port)          (0x00062c00 + (port))
#define R_XLMAC_TXFIFO_CELL_REQ_CNT(port)      (0x00062d00 + (port))
#define R_XLMAC_TX_CTRL(port)                  (0x00060400 + (port))
#define R_XLMAC_TX_MAC_SA(port)                (0x00060500 + (port))
#define R_XPORT_CONFIG(port)                   (0x00020000 + (port))
#define R_XPORT_MIB_RESET                      (0x02020d00)
#define R_XPORT_MODE_REG                       (0x02020a00)
#define R_XPORT_PORT_ENABLE                    (0x02020b00)
#define R_XPORT_XGXS_CTRL                      (0x02021000)
#define R_XPORT_XMAC_CONTROL                   (0x02020c00)
#define R_X_GPORT_CNTMAXSIZE(port)             (0x00020800 + (port))
/* LLS */
#define R_LLS_CONFIG0                          LLS_BLOCK_ID, (0x02000300)
#define R_LLS_INIT                             LLS_BLOCK_ID, (0x02000200)
#define M_LLS_L0_CHILD_WEIGHT_CFG_CNT(idx)     LLS_BLOCK_ID, (0x04007000+(idx))
#define M_LLS_L0_CONFIG(idx)                   LLS_BLOCK_ID, (0x04001000+(idx))
#define M_LLS_L0_MIN_CONFIG_C(idx)             LLS_BLOCK_ID, (0x0400b000+(idx))
#define M_LLS_L0_PARENT(idx)                   LLS_BLOCK_ID, (0x04000000+(idx))
#define M_LLS_L0_SHAPER_CONFIG_C(idx)          LLS_BLOCK_ID, (0x0400d000+(idx))
#define M_LLS_L1_CHILD_WEIGHT_CFG_CNT(idx)     LLS_BLOCK_ID, (0x08008000+(idx))
#define M_LLS_L1_CONFIG(idx)                   LLS_BLOCK_ID, (0x08001000+(idx))
#define M_LLS_L1_MIN_CONFIG_C(idx)             LLS_BLOCK_ID, (0x0800c000+(idx))
#define M_LLS_L1_PARENT(idx)                   LLS_BLOCK_ID, (0x08000000+(idx))
#define M_LLS_L1_SHAPER_CONFIG_C(idx)          LLS_BLOCK_ID, (0x0800f000+(idx))
#define M_LLS_L2_CHILD_WEIGHT_CFG_CNT(idx)     LLS_BLOCK_ID, (0x0c001000+(idx))
#define M_LLS_L2_MIN_CONFIG_C(idx)             LLS_BLOCK_ID, (0x0c007000+(idx))
#define M_LLS_L2_PARENT(idx)                   LLS_BLOCK_ID, (0x0c000000+(idx))
#define M_LLS_L2_SHAPER_CONFIG_C(idx)          LLS_BLOCK_ID, (0x0c008000+(idx))
#define R_LLS_MAX_REFRESH_ENABLE               LLS_BLOCK_ID, (0x02001b00)
#define R_LLS_MIN_REFRESH_ENABLE               LLS_BLOCK_ID, (0x02001a00)
#define M_LLS_PORT_CONFIG(idx)                 LLS_BLOCK_ID, (0x00000000+(idx))
#define M_LLS_PORT_SHAPER_BUCKET_C(idx)        LLS_BLOCK_ID, (0x00000500+(idx))
#define M_LLS_PORT_SHAPER_CONFIG_C(idx)        LLS_BLOCK_ID, (0x00000400+(idx))
#define M_LLS_PORT_TDM(idx)                    LLS_BLOCK_ID, (0x18000000+(idx))
#define R_LLS_SOFT_RESET                       LLS_BLOCK_ID, (0x02000100)
#define R_LLS_SP_WERR_DYN_CHANGE_0A            LLS_BLOCK_ID, (0x02005400)
#define R_LLS_SP_WERR_DYN_CHANGE_0B            LLS_BLOCK_ID, (0x02005500)
#define R_LLS_SP_WERR_DYN_CHANGE_0C            LLS_BLOCK_ID, (0x02005600)
#define R_LLS_TDM_CAL_CFG                      LLS_BLOCK_ID, (0x02001700)
/* IECELL0 IECELL1 */
#define R_IECELL_CONFIG(port)                  (0x00020000 + (port))
/* TOP */
#define R_TOP_CORE_PLL0_CTRL_REGISTER_3        TOP_BLOCK_ID, (0x02001200)
#define R_TOP_MISC_CONTROL_1                   TOP_BLOCK_ID, (0x02002e00)
#define R_TOP_MISC_CONTROL_2                   TOP_BLOCK_ID, (0x02002f00)
#define R_TOP_MISC_CONTROL_3                   TOP_BLOCK_ID, (0x02003000)
#define R_TOP_SOFT_RESET_REG                   TOP_BLOCK_ID, (0x02000200)
#define R_TOP_SOFT_RESET_REG_2                 TOP_BLOCK_ID, (0x02000300)
#define R_TOP_SOFT_RESET_REG_3                 TOP_BLOCK_ID, (0x02000400)
#define R_TOP_SW_BOND_OVRD_CTRL1               TOP_BLOCK_ID, (0x02005400)
#define R_TOP_TIME_SYNC_PLL_CTRL_REGISTER_0    TOP_BLOCK_ID, (0x02001500)
#define R_TOP_TIME_SYNC_PLL_CTRL_REGISTER_2    TOP_BLOCK_ID, (0x02001700)
#define R_TOP_TIME_SYNC_PLL_CTRL_REGISTER_3    TOP_BLOCK_ID, (0x02001800)
#define R_TOP_TIME_SYNC_PLL_CTRL_REGISTER_5    TOP_BLOCK_ID, (0x02001a00)
#define R_TOP_XGXS0_PLL_CONTROL_4              TOP_BLOCK_ID, (0x02000900)
/* TXLP */
#define R_TXLP_HW_RESET_CONTROL_1              TXLP_BLOCK_ID, (0x02000100)
#define R_TXLP_MIN_STARTCNT                    TXLP_BLOCK_ID, (0x02000c00)
#define M_TXLP_PORT_ADDR_MAP_TABLE(idx)        TXLP_BLOCK_ID, (0x00180000+(idx))
#define R_TXLP_PORT_ENABLE                     TXLP_BLOCK_ID, (0x02000200)
/* MMU */
#define R_BUFFER_CELL_LIMIT_SP(idx)            MMU_BLOCK_ID, (0x0a010a00 + ((idx) << 8))
#define R_BUFFER_CELL_LIMIT_SP_SHARED          MMU_BLOCK_ID, (0x0a010e00)
#define R_CELL_RESET_LIMIT_OFFSET_SP(idx)      MMU_BLOCK_ID, (0x0a011400 + ((idx) << 8))
#define R_CFAPICONFIG                          MMU_BLOCK_ID, (0x1e000000)
#define R_CFAPIFULLRESETPOINT                  MMU_BLOCK_ID, (0x1e000300)
#define R_CFAPIFULLSETPOINT                    MMU_BLOCK_ID, (0x1e000200)
#define R_COLOR_AWARE                          MMU_BLOCK_ID, (0x0a013100)
#define R_CTR_SYS_CONTROL                      MMU_BLOCK_ID, (0x82000000)
#define R_GLOBAL_HDRM_LIMIT                    MMU_BLOCK_ID, (0x0a000600)
#define R_INPUT_PORT_RX_ENABLE_64              MMU_BLOCK_ID, (0x0a000200)
#define R_MISCCONFIG                           MMU_BLOCK_ID, (0x32000000)
#define M_MMU_AGING_LMT_INT(idx)               MMU_BLOCK_ID, (0x34000800+(idx))
#define R_MMU_ENQ_FAPCONFIG_0                  MMU_BLOCK_ID, (0x06003200)
#define R_MMU_ENQ_FAPFULLRESETPOINT_0          MMU_BLOCK_ID, (0x06003500)
#define R_MMU_ENQ_FAPFULLSETPOINT_0            MMU_BLOCK_ID, (0x06003400)
#define R_MMU_ENQ_IP_PRI_TO_PG_PROFILE_0       MMU_BLOCK_ID, (0x06000100)
#define R_MMU_ENQ_PROFILE_0_PRI_GRP0           MMU_BLOCK_ID, (0x06000200)
#define R_MMU_ENQ_PROFILE_0_PRI_GRP1           MMU_BLOCK_ID, (0x06000300)
#define M_MMU_INTFI_FC_MAP_TBL2(idx)           MMU_BLOCK_ID, (0x5400a000+(idx))
#define M_MMU_INTFI_ST_TRANS_TBL(idx)          MMU_BLOCK_ID, (0x54003000+(idx))
#define M_MMU_RQE_QUEUE_OP_NODE_MAP(idx)       MMU_BLOCK_ID, (0x88014000+(idx))
#define M_MMU_THDO_OPNCONFIG_CELL(idx)         MMU_BLOCK_ID, (0x0c008000+(idx))
#define M_MMU_THDO_OPNCONFIG_QENTRY(idx)       MMU_BLOCK_ID, (0x0c009000+(idx))
#define M_MMU_THDO_QCONFIG_CELL(idx)           MMU_BLOCK_ID, (0x0c000000+(idx))
#define M_MMU_THDO_QCONFIG_QENTRY(idx)         MMU_BLOCK_ID, (0x0c004000+(idx))
#define M_MMU_THDO_QOFFSET_CELL(idx)           MMU_BLOCK_ID, (0x0c001000+(idx))
#define M_MMU_THDO_QOFFSET_QENTRY(idx)         MMU_BLOCK_ID, (0x0c005000+(idx))
#define M_MMU_WRED_QUEUE_OP_NODE_MAP(idx)      MMU_BLOCK_ID, (0x5c00d000+(idx))
#define R_OP_BUFFER_LIMIT_RED_CELLI            MMU_BLOCK_ID, (0x0e000a00)
#define R_OP_BUFFER_LIMIT_RED_QENTRY           MMU_BLOCK_ID, (0x0e000e00)
#define R_OP_BUFFER_LIMIT_RED_THDORDEQ         MMU_BLOCK_ID, (0xca000200)
#define R_OP_BUFFER_LIMIT_RED_THDORQEQ         MMU_BLOCK_ID, (0xb6000200)
#define R_OP_BUFFER_LIMIT_RESUME_RED_CELLI     MMU_BLOCK_ID, (0x0e008a00)
#define R_OP_BUFFER_LIMIT_RESUME_RED_QENTRY    MMU_BLOCK_ID, (0x0e008e00)
#define R_OP_BUFFER_LIMIT_RESUME_RED_THDORDEQ   MMU_BLOCK_ID, (0xca000600)
#define R_OP_BUFFER_LIMIT_RESUME_RED_THDORQEQ   MMU_BLOCK_ID, (0xb6000600)
#define R_OP_BUFFER_LIMIT_RESUME_YELLOW_CELLI   MMU_BLOCK_ID, (0x0e008500)
#define R_OP_BUFFER_LIMIT_RESUME_YELLOW_QENTRY   MMU_BLOCK_ID, (0x0e008900)
#define R_OP_BUFFER_LIMIT_RESUME_YELLOW_THDORDEQ   MMU_BLOCK_ID, (0xca000500)
#define R_OP_BUFFER_LIMIT_RESUME_YELLOW_THDORQEQ   MMU_BLOCK_ID, (0xb6000500)
#define R_OP_BUFFER_LIMIT_YELLOW_CELLI         MMU_BLOCK_ID, (0x0e000500)
#define R_OP_BUFFER_LIMIT_YELLOW_QENTRY        MMU_BLOCK_ID, (0x0e000900)
#define R_OP_BUFFER_LIMIT_YELLOW_THDORDEQ      MMU_BLOCK_ID, (0xca000100)
#define R_OP_BUFFER_LIMIT_YELLOW_THDORQEQ      MMU_BLOCK_ID, (0xb6000100)
#define R_OP_BUFFER_SHARED_LIMIT_CELLI         MMU_BLOCK_ID, (0x0e000000)
#define R_OP_BUFFER_SHARED_LIMIT_QENTRY        MMU_BLOCK_ID, (0x0e000400)
#define R_OP_BUFFER_SHARED_LIMIT_RESUME_CELLI   MMU_BLOCK_ID, (0x0e008000)
#define R_OP_BUFFER_SHARED_LIMIT_RESUME_QENTRY   MMU_BLOCK_ID, (0x0e008400)
#define R_OP_BUFFER_SHARED_LIMIT_RESUME_THDORDEQ   MMU_BLOCK_ID, (0xca000400)
#define R_OP_BUFFER_SHARED_LIMIT_RESUME_THDORQEQ   MMU_BLOCK_ID, (0xb6000400)
#define R_OP_BUFFER_SHARED_LIMIT_THDORDEQ      MMU_BLOCK_ID, (0xca000000)
#define R_OP_BUFFER_SHARED_LIMIT_THDORQEQ      MMU_BLOCK_ID, (0xb6000000)
#define R_OP_QUEUE_CONFIG1_THDORDEI(idx)       MMU_BLOCK_ID, (0xc2001700 + ((idx) << 8))
#define R_OP_QUEUE_CONFIG1_THDORDEQ(idx)       MMU_BLOCK_ID, (0xca001700 + ((idx) << 8))
#define R_OP_QUEUE_CONFIG1_THDORQEI(idx)       MMU_BLOCK_ID, (0xae001f00 + ((idx) << 8))
#define R_OP_QUEUE_CONFIG1_THDORQEQ(idx)       MMU_BLOCK_ID, (0xb6001f00 + ((idx) << 8))
#define R_OP_QUEUE_CONFIG_THDORDEI(idx)        MMU_BLOCK_ID, (0xc2000f00 + ((idx) << 8))
#define R_OP_QUEUE_CONFIG_THDORDEQ(idx)        MMU_BLOCK_ID, (0xca000f00 + ((idx) << 8))
#define R_OP_QUEUE_CONFIG_THDORQEI(idx)        MMU_BLOCK_ID, (0xae001300 + ((idx) << 8))
#define R_OP_QUEUE_CONFIG_THDORQEQ(idx)        MMU_BLOCK_ID, (0xb6001300 + ((idx) << 8))
#define R_OP_QUEUE_LIMIT_RED_THDORDEI(idx)     MMU_BLOCK_ID, (0xc2002700 + ((idx) << 8))
#define R_OP_QUEUE_LIMIT_RED_THDORDEQ(idx)     MMU_BLOCK_ID, (0xca002700 + ((idx) << 8))
#define R_OP_QUEUE_LIMIT_RED_THDORQEI(idx)     MMU_BLOCK_ID, (0xae003700 + ((idx) << 8))
#define R_OP_QUEUE_LIMIT_RED_THDORQEQ(idx)     MMU_BLOCK_ID, (0xb6003700 + ((idx) << 8))
#define R_OP_QUEUE_LIMIT_YELLOW_THDORDEI(idx)   MMU_BLOCK_ID, (0xc2001f00 + ((idx) << 8))
#define R_OP_QUEUE_LIMIT_YELLOW_THDORDEQ(idx)   MMU_BLOCK_ID, (0xca001f00 + ((idx) << 8))
#define R_OP_QUEUE_LIMIT_YELLOW_THDORQEI(idx)   MMU_BLOCK_ID, (0xae002b00 + ((idx) << 8))
#define R_OP_QUEUE_LIMIT_YELLOW_THDORQEQ(idx)   MMU_BLOCK_ID, (0xb6002b00 + ((idx) << 8))
#define R_OP_QUEUE_RESET_OFFSET_RED_THDORDEI(idx)   MMU_BLOCK_ID, (0xc2003f00 + ((idx) << 8))
#define R_OP_QUEUE_RESET_OFFSET_RED_THDORDEQ(idx)   MMU_BLOCK_ID, (0xca003f00 + ((idx) << 8))
#define R_OP_QUEUE_RESET_OFFSET_RED_THDORQEI(idx)   MMU_BLOCK_ID, (0xae005b00 + ((idx) << 8))
#define R_OP_QUEUE_RESET_OFFSET_RED_THDORQEQ(idx)   MMU_BLOCK_ID, (0xb6005b00 + ((idx) << 8))
#define R_OP_QUEUE_RESET_OFFSET_THDORDEI(idx)   MMU_BLOCK_ID, (0xc2002f00 + ((idx) << 8))
#define R_OP_QUEUE_RESET_OFFSET_THDORDEQ(idx)   MMU_BLOCK_ID, (0xca002f00 + ((idx) << 8))
#define R_OP_QUEUE_RESET_OFFSET_THDORQEI(idx)   MMU_BLOCK_ID, (0xae004300 + ((idx) << 8))
#define R_OP_QUEUE_RESET_OFFSET_THDORQEQ(idx)   MMU_BLOCK_ID, (0xb6004300 + ((idx) << 8))
#define R_OP_QUEUE_RESET_OFFSET_YELLOW_THDORDEI(idx)   MMU_BLOCK_ID, (0xc2003700 + ((idx) << 8))
#define R_OP_QUEUE_RESET_OFFSET_YELLOW_THDORDEQ(idx)   MMU_BLOCK_ID, (0xca003700 + ((idx) << 8))
#define R_OP_QUEUE_RESET_OFFSET_YELLOW_THDORQEI(idx)   MMU_BLOCK_ID, (0xae004f00 + ((idx) << 8))
#define R_OP_QUEUE_RESET_OFFSET_YELLOW_THDORQEQ(idx)   MMU_BLOCK_ID, (0xb6004f00 + ((idx) << 8))
#define R_OP_THR_CONFIG                        MMU_BLOCK_ID, (0x0e001200)
#define R_PORT_MAX_PKT_SIZE(port)              MMU_BLOCK_ID, (0x08002200 + (port))
#define R_PORT_PAUSE_ENABLE_64                 MMU_BLOCK_ID, (0x0a000400)
#define R_PORT_PG_SPID(port)                   MMU_BLOCK_ID, (0x08007300 + (port))
#define R_PORT_PROFILE_MAP                     MMU_BLOCK_ID, (0x0a01bc00)
#define R_PROFILE0_PRI_GRP0                    MMU_BLOCK_ID, (0x0a007000)
#define R_PROFILE0_PRI_GRP1                    MMU_BLOCK_ID, (0x0a007100)
#define R_QSTRUCT_FAPCONFIG(idx)               MMU_BLOCK_ID, (0xaa000000 + ((idx) << 8))
#define R_QSTRUCT_FAPFULLRESETPOINT(idx)       MMU_BLOCK_ID, (0xaa000600 + ((idx) << 8))
#define R_QSTRUCT_FAPFULLSETPOINT(idx)         MMU_BLOCK_ID, (0xaa000400 + ((idx) << 8))
#define R_QSTRUCT_FAPOTPCONFIG(idx)            MMU_BLOCK_ID, (0xaa000a00 + ((idx) << 8))
#define R_RQE_GLOBAL_CONFIG                    MMU_BLOCK_ID, (0x8a000000)
#define R_RQE_PP_PORT_CONFIG(idx)              MMU_BLOCK_ID, (0x8a010000 + ((idx) << 8))
#define R_RQE_SCHEDULER_CONFIG                 MMU_BLOCK_ID, (0x8a001100)
#define R_RQE_SCHEDULER_WEIGHT_L0_QUEUE(idx)   MMU_BLOCK_ID, (0x8a001200 + ((idx) << 8))
#define R_RQE_SCHEDULER_WEIGHT_L1_QUEUE(idx)   MMU_BLOCK_ID, (0x8a002200 + ((idx) << 8))
#define R_THDIQEN_BUFFER_CELL_LIMIT_SP(idx)    MMU_BLOCK_ID, (0xa6010a00 + ((idx) << 8))
#define R_THDIQEN_BUFFER_CELL_LIMIT_SP_SHARED   MMU_BLOCK_ID, (0xa6010e00)
#define R_THDIQEN_CELL_RESET_LIMIT_OFFSET_SP(idx)   MMU_BLOCK_ID, (0xa6011400 + ((idx) << 8))
#define R_THDIQEN_GLOBAL_HDRM_LIMIT            MMU_BLOCK_ID, (0xa6000600)
#define R_THDIQEN_INPUT_PORT_RX_ENABLE_64      MMU_BLOCK_ID, (0xa6000200)
#define R_THDIQEN_PORT_PAUSE_ENABLE_64         MMU_BLOCK_ID, (0xa6000400)
#define R_THDIQEN_PORT_PG_SPID(port)           MMU_BLOCK_ID, (0xa4007300 + (port))
#define R_THDIQEN_PORT_PROFILE_MAP             MMU_BLOCK_ID, (0xa601bc00)
#define R_THDIQEN_PROFILE0_PRI_GRP0            MMU_BLOCK_ID, (0xa6007000)
#define R_THDIQEN_PROFILE0_PRI_GRP1            MMU_BLOCK_ID, (0xa6007100)
#define R_THDIQEN_THDI_BYPASS                  MMU_BLOCK_ID, (0xa6000100)
#define M_THDIQEN_THDI_PORT_PG_CONFIG(idx)     MMU_BLOCK_ID, (0xa4000400+(idx))
#define M_THDIQEN_THDI_PORT_SP_CONFIG(idx)     MMU_BLOCK_ID, (0xa4000700+(idx))
#define R_THDIRQE_BUFFER_CELL_LIMIT_SP(idx)    MMU_BLOCK_ID, (0xa2010a00 + ((idx) << 8))
#define R_THDIRQE_BUFFER_CELL_LIMIT_SP_SHARED   MMU_BLOCK_ID, (0xa2010e00)
#define R_THDIRQE_CELL_RESET_LIMIT_OFFSET_SP(idx)   MMU_BLOCK_ID, (0xa2011400 + ((idx) << 8))
#define R_THDIRQE_GLOBAL_HDRM_LIMIT            MMU_BLOCK_ID, (0xa2000600)
#define R_THDIRQE_INPUT_PORT_RX_ENABLE_64      MMU_BLOCK_ID, (0xa2000200)
#define R_THDIRQE_PORT_PAUSE_ENABLE_64         MMU_BLOCK_ID, (0xa2000400)
#define R_THDIRQE_PORT_PG_SPID(port)           MMU_BLOCK_ID, (0xa0007300 + (port))
#define R_THDIRQE_PORT_PROFILE_MAP             MMU_BLOCK_ID, (0xa201bc00)
#define R_THDIRQE_PROFILE0_PRI_GRP0            MMU_BLOCK_ID, (0xa2007000)
#define R_THDIRQE_PROFILE0_PRI_GRP1            MMU_BLOCK_ID, (0xa2007100)
#define R_THDIRQE_THDI_BYPASS                  MMU_BLOCK_ID, (0xa2000100)
#define M_THDIRQE_THDI_PORT_PG_CONFIG(idx)     MMU_BLOCK_ID, (0xa0000400+(idx))
#define M_THDIRQE_THDI_PORT_SP_CONFIG(idx)     MMU_BLOCK_ID, (0xa0000700+(idx))
#define R_THDI_BYPASS                          MMU_BLOCK_ID, (0x0a000100)
#define M_THDI_PORT_PG_CONFIG(idx)             MMU_BLOCK_ID, (0x08000400+(idx))
#define M_THDI_PORT_SP_CONFIG(idx)             MMU_BLOCK_ID, (0x08000700+(idx))
#define R_THDO_BYPASS                          MMU_BLOCK_ID, (0x0e001000)
#define R_THDO_MISCCONFIG                      MMU_BLOCK_ID, (0x0e001100)
#define R_THDO_QUEUE_DISABLE_CFG1              MMU_BLOCK_ID, (0x0e00e000)
#define R_THDO_QUEUE_DISABLE_CFG2              MMU_BLOCK_ID, (0x0e00e100)
#define R_THDO_QUEUE_DISABLE_STATUS            MMU_BLOCK_ID, (0x0e00e200)
#define R_TOQ_FLUSH0                           MMU_BLOCK_ID, (0x12000b00)
#define R_WRED_MISCCONFIG                      MMU_BLOCK_ID, (0x5e000a00)
#define R_WRED_PARITY_ERROR_MASK               MMU_BLOCK_ID, (0x5e000f00)
/* IPIPE */
#define R_AUX_ARB_CONTROL                      IPIPE_BLOCK_ID, (0x02010200)
#define R_AUX_ARB_CONTROL_2                    IPIPE_BLOCK_ID, (0x02010300)
#define M_COS_MAP(idx)                         IPIPE_BLOCK_ID, (0x3c840000+(idx))
#define M_CPU_PBM                              IPIPE_BLOCK_ID, (0x38240000)
#define M_CPU_PBM_2                            IPIPE_BLOCK_ID, (0x3d080000)
#define R_DOS_CONTROL                          IPIPE_BLOCK_ID, (0x0e000100)
#define R_DOS_CONTROL_2                        IPIPE_BLOCK_ID, (0x0e000200)
#define R_DOS_CONTROL_3                        IPIPE_BLOCK_ID, (0x06000100)
#define M_DSCP_TB(idx)                         IPIPE_BLOCK_ID, (0x301c0000+(idx))
#define M_EGR_MASK(idx)                        IPIPE_BLOCK_ID, (0x3c040000+(idx))
#define M_EMIRROR_CONTROL(idx)                 IPIPE_BLOCK_ID, (0x3ca00000+(idx))
#define M_EMIRROR_CONTROL1(idx)                IPIPE_BLOCK_ID, (0x3cb00000+(idx))
#define M_EMIRROR_CONTROL2(idx)                IPIPE_BLOCK_ID, (0x3cb40000+(idx))
#define M_EMIRROR_CONTROL3(idx)                IPIPE_BLOCK_ID, (0x3cb80000+(idx))
#define M_EM_MTP_INDEX(idx)                    IPIPE_BLOCK_ID, (0x3c6c0000+(idx))
#define M_EPC_LINK_BMAP                        IPIPE_BLOCK_ID, (0x3cd00000)
#define M_FP_COUNTER_TABLE(idx)                IPIPE_BLOCK_ID, (0x34140000+(idx))
#define M_FP_GLOBAL_MASK_TCAM(idx)             IPIPE_BLOCK_ID, (0x34180000+(idx))
#define M_FP_METER_TABLE(idx)                  IPIPE_BLOCK_ID, (0x34100000+(idx))
#define M_FP_POLICY_TABLE(idx)                 IPIPE_BLOCK_ID, (0x340c0000+(idx))
#define M_FP_PORT_FIELD_SEL(idx)               IPIPE_BLOCK_ID, (0x30000000+(idx))
#define R_FP_SLICE_ENABLE                      IPIPE_BLOCK_ID, (0x36000000)
#define M_FP_SLICE_MAP                         IPIPE_BLOCK_ID, (0x34080000)
#define M_FP_STORM_CONTROL_METERS(idx)         IPIPE_BLOCK_ID, (0x341c0000+(idx))
#define M_FP_TCAM(idx)                         IPIPE_BLOCK_ID, (0x34040000+(idx))
#define M_FP_UDF_OFFSET(idx)                   IPIPE_BLOCK_ID, (0x08140000+(idx))
#define M_FP_UDF_TCAM(idx)                     IPIPE_BLOCK_ID, (0x08100000+(idx))
#define R_HASH_CONTROL                         IPIPE_BLOCK_ID, (0x16002200)
#define R_IARB_TDM_CONTROL                     IPIPE_BLOCK_ID, (0x02010c00)
#define M_IARB_TDM_TABLE(idx)                  IPIPE_BLOCK_ID, (0x00400000+(idx))
#define M_IFP_REDIRECTION_PROFILE(idx)         IPIPE_BLOCK_ID, (0x380c0000+(idx))
#define R_IGMP_MLD_PKT_CONTROL(idx)            IPIPE_BLOCK_ID, (0x32006000 + ((idx) << 8))
#define M_IM_MTP_INDEX(idx)                    IPIPE_BLOCK_ID, (0x3c680000+(idx))
#define R_ING_CONFIG_64                        IPIPE_BLOCK_ID, (0x06000000)
#define R_ING_COS_MODE(port)                   IPIPE_BLOCK_ID, (0x3c004e00 + (port))
#define M_ING_EGRMSKBMAP(idx)                  IPIPE_BLOCK_ID, (0x3ca40000+(idx))
#define M_ING_EN_EFILTER_BITMAP                IPIPE_BLOCK_ID, (0x3cc80000)
#define R_ING_FLEX_CTR_COUNTER_UPDATE_CONTROL_0   IPIPE_BLOCK_ID, (0x4a000000)
#define R_ING_FLEX_CTR_COUNTER_UPDATE_CONTROL_1   IPIPE_BLOCK_ID, (0x4a000100)
#define R_ING_FLEX_CTR_COUNTER_UPDATE_CONTROL_2   IPIPE_BLOCK_ID, (0x4a000200)
#define R_ING_FLEX_CTR_COUNTER_UPDATE_CONTROL_3   IPIPE_BLOCK_ID, (0x4a000300)
#define R_ING_HW_RESET_CONTROL_1               IPIPE_BLOCK_ID, (0x02010400)
#define R_ING_HW_RESET_CONTROL_2               IPIPE_BLOCK_ID, (0x02010500)
#define R_ING_MISC_CONFIG                      IPIPE_BLOCK_ID, (0x3e004900)
#define M_ING_PHYSICAL_PORT_TABLE(idx)         IPIPE_BLOCK_ID, (0x04000000+(idx))
#define M_ING_PRI_CNG_MAP(idx)                 IPIPE_BLOCK_ID, (0x30200000+(idx))
#define M_ING_VLAN_TAG_ACTION_PROFILE(idx)     IPIPE_BLOCK_ID, (0x102c0000+(idx))
#define M_L2MC(idx)                            IPIPE_BLOCK_ID, (0x38100000+(idx))
#define R_L2_AGE_TIMER                         IPIPE_BLOCK_ID, (0x02010700)
#define R_L2_AUX_HASH_CONTROL                  IPIPE_BLOCK_ID, (0x1a000000)
#define M_L2_ENTRY(idx)                        IPIPE_BLOCK_ID, (0x18000000+(idx))
#define M_L2_USER_ENTRY(idx)                   IPIPE_BLOCK_ID, (0x18100000+(idx))
#define R_L2_USER_ENTRY_CAM_DBGCTRL            IPIPE_BLOCK_ID, (0x1a010000)
#define R_L3_AUX_HASH_CONTROL                  IPIPE_BLOCK_ID, (0x26000000)
#define M_MIRROR_CONTROL(idx)                  IPIPE_BLOCK_ID, (0x3cf00000+(idx))
#define R_MIRROR_SELECT                        IPIPE_BLOCK_ID, (0x3e004000)
#define M_MULTIPASS_LOOPBACK_BITMAP            IPIPE_BLOCK_ID, (0x3cec0000)
#define M_NONUCAST_TRUNK_BLOCK_MASK(idx)       IPIPE_BLOCK_ID, (0x3c5c0000+(idx))
#define M_PORT(idx)                            IPIPE_BLOCK_ID, (0x04080000+(idx))
#define M_PP_PORT_GPP_TRANSLATION_1            IPIPE_BLOCK_ID, (0x040c0000)
#define M_PP_PORT_GPP_TRANSLATION_2            IPIPE_BLOCK_ID, (0x184c0000)
#define M_PP_PORT_GPP_TRANSLATION_3            IPIPE_BLOCK_ID, (0x3d300000)
#define M_PP_PORT_GPP_TRANSLATION_4            IPIPE_BLOCK_ID, (0x08380000)
#define M_PP_PORT_TO_PHYSICAL_PORT_MAP(idx)    IPIPE_BLOCK_ID, (0x3d180000+(idx))
#define R_PROTOCOL_PKT_CONTROL(idx)            IPIPE_BLOCK_ID, (0x32002000 + ((idx) << 8))
#define R_RDBGC0_SELECT                        IPIPE_BLOCK_ID, (0x3e002100)
#define R_RDBGC1_SELECT                        IPIPE_BLOCK_ID, (0x3e002200)
#define R_RDBGC2_SELECT                        IPIPE_BLOCK_ID, (0x3e002300)
#define M_SOURCE_TRUNK_MAP(idx)                IPIPE_BLOCK_ID, (0x08000000+(idx))
#define M_SOURCE_TRUNK_MAP_MODBASE(idx)        IPIPE_BLOCK_ID, (0x04180000+(idx))
#define R_STORM_CONTROL_METER_CONFIG(port)     IPIPE_BLOCK_ID, (0x30000200 + (port))
#define R_SW2_FP_DST_ACTION_CONTROL            IPIPE_BLOCK_ID, (0x3e004d00)
#define M_SYSTEM_CONFIG_TABLE(idx)             IPIPE_BLOCK_ID, (0x04140000+(idx))
#define M_TRUNK_BITMAP(idx)                    IPIPE_BLOCK_ID, (0x3c540000+(idx))
#define M_TRUNK_GROUP(idx)                     IPIPE_BLOCK_ID, (0x382c0000+(idx))
#define M_TRUNK_MEMBER(idx)                    IPIPE_BLOCK_ID, (0x3c480000+(idx))
#define M_UNKNOWN_MCAST_BLOCK_MASK(idx)        IPIPE_BLOCK_ID, (0x3c980000+(idx))
#define M_UNKNOWN_UCAST_BLOCK_MASK(idx)        IPIPE_BLOCK_ID, (0x3c940000+(idx))
#define M_VLAN(idx)                            IPIPE_BLOCK_ID, (0x14280000+(idx))
#define R_VLAN_CTRL                            IPIPE_BLOCK_ID, (0x06000200)
#define M_VLAN_PROFILE(idx)                    IPIPE_BLOCK_ID, (0x14300000+(idx))
#define M_VLAN_STG(idx)                        IPIPE_BLOCK_ID, (0x142c0000+(idx))
#define R_VLAN_SUBNET_CAM_DBGCTRL              IPIPE_BLOCK_ID, (0x12010000)
/* CMIC */
#define CMIC_CMC1_CH0_DMA_CTRL                 (0x03232140)
#define CMIC_CMC1_CH1_COS_CTRL_RX_0            (0x03232170)
#define CMIC_CMC1_CH1_DMA_CTRL                 (0x03232144)
#define CMIC_CMC1_CHx_DMA_CTRL(idx)            (0x03232140 + (idx) * 4)
#define CMIC_CMC1_DMA_DESC(idx)                (0x03232158 + (idx) * 4)
#define CMIC_CMC1_DMA_STAT                     (0x03232150)
#define CMIC_CMC1_DMA_STAT_CLR                 (0x032321a4)
#define CMIC_CMC1_HOSTMEM_ADDR_REMAP_0         (0x03232474)
#define CMIC_CMC1_HOSTMEM_ADDR_REMAP_1         (0x03232478)
#define CMIC_CMC1_HOSTMEM_ADDR_REMAP_2         (0x0323247c)
#define CMIC_CMC1_HOSTMEM_ADDR_REMAP_3         (0x032324ac)
#define CMIC_CMC1_MIIM_ADDRESS                 (0x03232088)
#define CMIC_CMC1_MIIM_CTRL                    (0x0323208c)
#define CMIC_CMC1_MIIM_PARAM                   (0x03232080)
#define CMIC_CMC1_MIIM_READ_DATA               (0x03232084)
#define CMIC_CMC1_MIIM_STAT                    (0x03232090)
#define CMIC_CMC1_SCHAN_ACK_DATA_BEAT_COUNT    (0x03232004)
#define CMIC_CMC1_SCHAN_CTRL                   (0x03232000)
#define CMIC_CMC1_SCHAN_ERR                    (0x03232008)
#define CMIC_CPS_RESET                         (0x03210220)
#define CMIC_DEV_REV_ID                        (0x03210224)
#define CMIC_GP_DATA_IN                        (0x03202000)
#define CMIC_GP_DATA_OUT                       (0x03202004)
#define CMIC_GP_OUT_EN                         (0x03202008)
#define CMIC_LEDUP0_CTRL                       (0x03220000)
#define CMIC_LEDUP0_PORT_ORDER_REMAP_0_3       (0x03220010)
#define CMIC_LEDUP0_PORT_ORDER_REMAP_60_63     (0x0322004c)
#define CMIC_LEDUP_DATA_RAM_D(idx)             (0x03220400 + (idx)*4)
#define CMIC_LEDUP_PROGRAM_RAM_D(idx)          (0x03220800 + (idx)*4)
#define CMIC_PCIE_USERIF_PURGE_CONTROL         (0x03210260)
#define CMIC_RATE_ADJUST_EXT_MDIO              (0x03211000)
#define CMIC_RATE_ADJUST_INT_MDIO              (0x03211004)
#define CMIC_RXBUF_EPINTF_RELEASE_ALL_CREDITS   (0x0321a000)
#define CMIC_SBUS_RING_MAP_0_7                 (0x03210098)
#define CMIC_SBUS_RING_MAP_16_23               (0x032100a0)
#define CMIC_SBUS_RING_MAP_24_31               (0x032100a4)
#define CMIC_SBUS_RING_MAP_32_39               (0x032100a8)
#define CMIC_SBUS_RING_MAP_40_47               (0x032100ac)
#define CMIC_SBUS_RING_MAP_48_55               (0x032100b0)
#define CMIC_SBUS_RING_MAP_56_63               (0x032100b4)
#define CMIC_SBUS_RING_MAP_8_15                (0x0321009c)
#define CMIC_SBUS_TIMEOUT                      (0x03210094)
#define CMIC_SEMAPHORE_1                       (0x03210300)
#define CMIC_SEMAPHORE_1_SHADOW                (0x03210304)
#define CMIC_SEMAPHORE_2                       (0x03210308)
#define CMIC_SEMAPHORE_2_SHADOW                (0x0321030c)
#define CMIC_SEMAPHORE_3                       (0x03210310)
#define CMIC_SEMAPHORE_3_SHADOW                (0x03210314)
#define CMIC_TXBUF_CONFIG                      (0x0321b034)
#define R_CMIC_SCHAN_D(idx)                    (0x0323200c + (idx)*4)
/* IPROC */
#define R_CHIPCOMMONG_GP_DATA_IN               (0x18009000)
#define R_CHIPCOMMONG_GP_DATA_OUT              (0x18009004)
#define R_CHIPCOMMONG_GP_OUT_EN                (0x18009008)
#define R_CHIPCOMMONG_UART0_UART_RBR_THR_DLL   (0x18001000)
#define R_CHIPCOMMONG_UART1_UART_RBR_THR_DLL   (0x18002000)
#define R_DMU_CRU_RESET                        (0x1800f200)
#define R_QSPI_BSPI_REGISTERS_REVISION_ID      (0x18021000)



/* Fields Marcos */
#define _DD_MAKEMASK1(n) (1 << (n))
#define _DD_MAKEMASK(v,n) ((((1)<<(v))-1) << (n))
#define _DD_MAKEVALUE(v,n) ((v) << (n))
#define _DD_GETVALUE(v,n,m) (((v) & (m)) >> (n))
/* Packet DMA descriptor.  */
#define S_DCB1_BYTES_TRANSFERRED           0                               
#define M_DCB1_BYTES_TRANSFERRED           _DD_MAKEMASK(16, S_DCB1_BYTES_TRANSFERRED)
#define V_DCB1_BYTES_TRANSFERRED(x)        _DD_MAKEVALUE(x,S_DCB1_BYTES_TRANSFERRED)
#define G_DCB1_BYTES_TRANSFERRED(x)        _DD_GETVALUE(x, S_DCB1_BYTES_TRANSFERRED, M_DCB1_BYTES_TRANSFERRED)
#define S_DCB1_END_BIT                     16                              
#define M_DCB1_END_BIT                     _DD_MAKEMASK(1, S_DCB1_END_BIT) 
#define V_DCB1_END_BIT(x)                  _DD_MAKEVALUE(x,S_DCB1_END_BIT) 
#define G_DCB1_END_BIT(x)                  _DD_GETVALUE(x, S_DCB1_END_BIT, M_DCB1_END_BIT)
#define S_DCB1_START_BIT                   17                              
#define M_DCB1_START_BIT                   _DD_MAKEMASK(1, S_DCB1_START_BIT)
#define V_DCB1_START_BIT(x)                _DD_MAKEVALUE(x,S_DCB1_START_BIT)
#define G_DCB1_START_BIT(x)                _DD_GETVALUE(x, S_DCB1_START_BIT, M_DCB1_START_BIT)
#define S_DCB1_ERROR                       18                              
#define M_DCB1_ERROR                       _DD_MAKEMASK(1, S_DCB1_ERROR)   
#define V_DCB1_ERROR(x)                    _DD_MAKEVALUE(x,S_DCB1_ERROR)   
#define G_DCB1_ERROR(x)                    _DD_GETVALUE(x, S_DCB1_ERROR, M_DCB1_ERROR)
#define S_DCB1_DONE                        31                              
#define M_DCB1_DONE                        _DD_MAKEMASK(1, S_DCB1_DONE)    
#define V_DCB1_DONE(x)                     _DD_MAKEVALUE(x,S_DCB1_DONE)    
#define G_DCB1_DONE(x)                     _DD_GETVALUE(x, S_DCB1_DONE, M_DCB1_DONE)
#define S_DCB1_EH_TAG                      0                               
#define M_DCB1_EH_TAG                      _DD_MAKEMASK(32, S_DCB1_EH_TAG) 
#define V_DCB1_EH_TAG(x)                   _DD_MAKEVALUE(x,S_DCB1_EH_TAG)  
#define G_DCB1_EH_TAG(x)                   _DD_GETVALUE(x, S_DCB1_EH_TAG, M_DCB1_EH_TAG)
#define S_DCB1_TIMESTAMP_UPPER             0                               
#define M_DCB1_TIMESTAMP_UPPER             _DD_MAKEMASK(32, S_DCB1_TIMESTAMP_UPPER)
#define V_DCB1_TIMESTAMP_UPPER(x)          _DD_MAKEVALUE(x,S_DCB1_TIMESTAMP_UPPER)
#define G_DCB1_TIMESTAMP_UPPER(x)          _DD_GETVALUE(x, S_DCB1_TIMESTAMP_UPPER, M_DCB1_TIMESTAMP_UPPER)
#define S_DCB1_EH_QUEUE_TAG                0                               
#define M_DCB1_EH_QUEUE_TAG                _DD_MAKEMASK(16, S_DCB1_EH_QUEUE_TAG)
#define V_DCB1_EH_QUEUE_TAG(x)             _DD_MAKEVALUE(x,S_DCB1_EH_QUEUE_TAG)
#define G_DCB1_EH_QUEUE_TAG(x)             _DD_GETVALUE(x, S_DCB1_EH_QUEUE_TAG, M_DCB1_EH_QUEUE_TAG)
#define S_DCB1_RX_BFD_SESSION_INDEX        0                               
#define M_DCB1_RX_BFD_SESSION_INDEX        _DD_MAKEMASK(13, S_DCB1_RX_BFD_SESSION_INDEX)
#define V_DCB1_RX_BFD_SESSION_INDEX(x)     _DD_MAKEVALUE(x,S_DCB1_RX_BFD_SESSION_INDEX)
#define G_DCB1_RX_BFD_SESSION_INDEX(x)     _DD_GETVALUE(x, S_DCB1_RX_BFD_SESSION_INDEX, M_DCB1_RX_BFD_SESSION_INDEX)
#define S_DCB1_RX_BFD_START_OFFSET_TYPE    13                              
#define M_DCB1_RX_BFD_START_OFFSET_TYPE    _DD_MAKEMASK(2, S_DCB1_RX_BFD_START_OFFSET_TYPE)
#define V_DCB1_RX_BFD_START_OFFSET_TYPE(x) _DD_MAKEVALUE(x,S_DCB1_RX_BFD_START_OFFSET_TYPE)
#define G_DCB1_RX_BFD_START_OFFSET_TYPE(x) _DD_GETVALUE(x, S_DCB1_RX_BFD_START_OFFSET_TYPE, M_DCB1_RX_BFD_START_OFFSET_TYPE)
#define S_DCB1_RX_BFD_START_OFFSET         15                              
#define M_DCB1_RX_BFD_START_OFFSET         _DD_MAKEMASK(8, S_DCB1_RX_BFD_START_OFFSET)
#define V_DCB1_RX_BFD_START_OFFSET(x)      _DD_MAKEVALUE(x,S_DCB1_RX_BFD_START_OFFSET)
#define G_DCB1_RX_BFD_START_OFFSET(x)      _DD_GETVALUE(x, S_DCB1_RX_BFD_START_OFFSET, M_DCB1_RX_BFD_START_OFFSET)
#define S_DCB1_EH_TAG_TYPE                 19                              
#define M_DCB1_EH_TAG_TYPE                 _DD_MAKEMASK(2, S_DCB1_EH_TAG_TYPE)
#define V_DCB1_EH_TAG_TYPE(x)              _DD_MAKEVALUE(x,S_DCB1_EH_TAG_TYPE)
#define G_DCB1_EH_TAG_TYPE(x)              _DD_GETVALUE(x, S_DCB1_EH_TAG_TYPE, M_DCB1_EH_TAG_TYPE)
#define S_DCB1_EH_SEG_SEL                  21                              
#define M_DCB1_EH_SEG_SEL                  _DD_MAKEMASK(3, S_DCB1_EH_SEG_SEL)
#define V_DCB1_EH_SEG_SEL(x)               _DD_MAKEVALUE(x,S_DCB1_EH_SEG_SEL)
#define G_DCB1_EH_SEG_SEL(x)               _DD_GETVALUE(x, S_DCB1_EH_SEG_SEL, M_DCB1_EH_SEG_SEL)
#define S_DCB1_INCOMING_TAG_STATUS         0                               
#define M_DCB1_INCOMING_TAG_STATUS         _DD_MAKEMASK(2, S_DCB1_INCOMING_TAG_STATUS)
#define V_DCB1_INCOMING_TAG_STATUS(x)      _DD_MAKEVALUE(x,S_DCB1_INCOMING_TAG_STATUS)
#define G_DCB1_INCOMING_TAG_STATUS(x)      _DD_GETVALUE(x, S_DCB1_INCOMING_TAG_STATUS, M_DCB1_INCOMING_TAG_STATUS)
#define S_DCB1_ING_OTAG_ACTION             2                               
#define M_DCB1_ING_OTAG_ACTION             _DD_MAKEMASK(2, S_DCB1_ING_OTAG_ACTION)
#define V_DCB1_ING_OTAG_ACTION(x)          _DD_MAKEVALUE(x,S_DCB1_ING_OTAG_ACTION)
#define G_DCB1_ING_OTAG_ACTION(x)          _DD_GETVALUE(x, S_DCB1_ING_OTAG_ACTION, M_DCB1_ING_OTAG_ACTION)
#define S_DCB1_ING_ITAG_ACTION             4                               
#define M_DCB1_ING_ITAG_ACTION             _DD_MAKEMASK(2, S_DCB1_ING_ITAG_ACTION)
#define V_DCB1_ING_ITAG_ACTION(x)          _DD_MAKEVALUE(x,S_DCB1_ING_ITAG_ACTION)
#define G_DCB1_ING_ITAG_ACTION(x)          _DD_GETVALUE(x, S_DCB1_ING_ITAG_ACTION, M_DCB1_ING_ITAG_ACTION)
#define S_DCB1_SD_TAG_PRESENT              6                               
#define M_DCB1_SD_TAG_PRESENT              _DD_MAKEMASK(1, S_DCB1_SD_TAG_PRESENT)
#define V_DCB1_SD_TAG_PRESENT(x)           _DD_MAKEVALUE(x,S_DCB1_SD_TAG_PRESENT)
#define G_DCB1_SD_TAG_PRESENT(x)           _DD_GETVALUE(x, S_DCB1_SD_TAG_PRESENT, M_DCB1_SD_TAG_PRESENT)
#define S_DCB1_SWITCH                      7                               
#define M_DCB1_SWITCH                      _DD_MAKEMASK(1, S_DCB1_SWITCH)  
#define V_DCB1_SWITCH(x)                   _DD_MAKEVALUE(x,S_DCB1_SWITCH)  
#define G_DCB1_SWITCH(x)                   _DD_GETVALUE(x, S_DCB1_SWITCH, M_DCB1_SWITCH)
#define S_DCB1_ALL_SW_COPY_DROPPED         8                               
#define M_DCB1_ALL_SW_COPY_DROPPED         _DD_MAKEMASK(1, S_DCB1_ALL_SW_COPY_DROPPED)
#define V_DCB1_ALL_SW_COPY_DROPPED(x)      _DD_MAKEVALUE(x,S_DCB1_ALL_SW_COPY_DROPPED)
#define G_DCB1_ALL_SW_COPY_DROPPED(x)      _DD_GETVALUE(x, S_DCB1_ALL_SW_COPY_DROPPED, M_DCB1_ALL_SW_COPY_DROPPED)
#define S_DCB1_SRC_HIGIG_TYPE              9                               
#define M_DCB1_SRC_HIGIG_TYPE              _DD_MAKEMASK(1, S_DCB1_SRC_HIGIG_TYPE)
#define V_DCB1_SRC_HIGIG_TYPE(x)           _DD_MAKEVALUE(x,S_DCB1_SRC_HIGIG_TYPE)
#define G_DCB1_SRC_HIGIG_TYPE(x)           _DD_GETVALUE(x, S_DCB1_SRC_HIGIG_TYPE, M_DCB1_SRC_HIGIG_TYPE)
#define S_DCB1_SRC_HG                      10                              
#define M_DCB1_SRC_HG                      _DD_MAKEMASK(1, S_DCB1_SRC_HG)  
#define V_DCB1_SRC_HG(x)                   _DD_MAKEVALUE(x,S_DCB1_SRC_HG)  
#define G_DCB1_SRC_HG(x)                   _DD_GETVALUE(x, S_DCB1_SRC_HG, M_DCB1_SRC_HG)
#define S_DCB1_IP_ROUTED                   11                              
#define M_DCB1_IP_ROUTED                   _DD_MAKEMASK(1, S_DCB1_IP_ROUTED)
#define V_DCB1_IP_ROUTED(x)                _DD_MAKEVALUE(x,S_DCB1_IP_ROUTED)
#define G_DCB1_IP_ROUTED(x)                _DD_GETVALUE(x, S_DCB1_IP_ROUTED, M_DCB1_IP_ROUTED)
#define S_DCB1_L3ONLY                      12                              
#define M_DCB1_L3ONLY                      _DD_MAKEMASK(1, S_DCB1_L3ONLY)  
#define V_DCB1_L3ONLY(x)                   _DD_MAKEVALUE(x,S_DCB1_L3ONLY)  
#define G_DCB1_L3ONLY(x)                   _DD_GETVALUE(x, S_DCB1_L3ONLY, M_DCB1_L3ONLY)
#define S_DCB1_REPLICATION                 13                              
#define M_DCB1_REPLICATION                 _DD_MAKEMASK(1, S_DCB1_REPLICATION)
#define V_DCB1_REPLICATION(x)              _DD_MAKEVALUE(x,S_DCB1_REPLICATION)
#define G_DCB1_REPLICATION(x)              _DD_GETVALUE(x, S_DCB1_REPLICATION, M_DCB1_REPLICATION)
#define S_DCB1_HG2_EXT_HDR_VALID           14                              
#define M_DCB1_HG2_EXT_HDR_VALID           _DD_MAKEMASK(1, S_DCB1_HG2_EXT_HDR_VALID)
#define V_DCB1_HG2_EXT_HDR_VALID(x)        _DD_MAKEVALUE(x,S_DCB1_HG2_EXT_HDR_VALID)
#define G_DCB1_HG2_EXT_HDR_VALID(x)        _DD_GETVALUE(x, S_DCB1_HG2_EXT_HDR_VALID, M_DCB1_HG2_EXT_HDR_VALID)
#define S_DCB1_OAM_PACKET                  15                              
#define M_DCB1_OAM_PACKET                  _DD_MAKEMASK(1, S_DCB1_OAM_PACKET)
#define V_DCB1_OAM_PACKET(x)               _DD_MAKEVALUE(x,S_DCB1_OAM_PACKET)
#define G_DCB1_OAM_PACKET(x)               _DD_GETVALUE(x, S_DCB1_OAM_PACKET, M_DCB1_OAM_PACKET)
#define S_DCB1_DO_NOT_CHANGE_TTL           16                              
#define M_DCB1_DO_NOT_CHANGE_TTL           _DD_MAKEMASK(1, S_DCB1_DO_NOT_CHANGE_TTL)
#define V_DCB1_DO_NOT_CHANGE_TTL(x)        _DD_MAKEVALUE(x,S_DCB1_DO_NOT_CHANGE_TTL)
#define G_DCB1_DO_NOT_CHANGE_TTL(x)        _DD_GETVALUE(x, S_DCB1_DO_NOT_CHANGE_TTL, M_DCB1_DO_NOT_CHANGE_TTL)
#define S_DCB1_BPDU                        17                              
#define M_DCB1_BPDU                        _DD_MAKEMASK(1, S_DCB1_BPDU)    
#define V_DCB1_BPDU(x)                     _DD_MAKEVALUE(x,S_DCB1_BPDU)    
#define G_DCB1_BPDU(x)                     _DD_GETVALUE(x, S_DCB1_BPDU, M_DCB1_BPDU)
#define S_DCB1_TIMESTAMP_TYPE              18                              
#define M_DCB1_TIMESTAMP_TYPE              _DD_MAKEMASK(2, S_DCB1_TIMESTAMP_TYPE)
#define V_DCB1_TIMESTAMP_TYPE(x)           _DD_MAKEVALUE(x,S_DCB1_TIMESTAMP_TYPE)
#define G_DCB1_TIMESTAMP_TYPE(x)           _DD_GETVALUE(x, S_DCB1_TIMESTAMP_TYPE, M_DCB1_TIMESTAMP_TYPE)
#define S_DCB1_LOOPBACK_PACKET_TYPE        20                              
#define M_DCB1_LOOPBACK_PACKET_TYPE        _DD_MAKEMASK(4, S_DCB1_LOOPBACK_PACKET_TYPE)
#define V_DCB1_LOOPBACK_PACKET_TYPE(x)     _DD_MAKEVALUE(x,S_DCB1_LOOPBACK_PACKET_TYPE)
#define G_DCB1_LOOPBACK_PACKET_TYPE(x)     _DD_GETVALUE(x, S_DCB1_LOOPBACK_PACKET_TYPE, M_DCB1_LOOPBACK_PACKET_TYPE)
#define S_DCB1_MTP_INDEX                   24                              
#define M_DCB1_MTP_INDEX                   _DD_MAKEMASK(5, S_DCB1_MTP_INDEX)
#define V_DCB1_MTP_INDEX(x)                _DD_MAKEVALUE(x,S_DCB1_MTP_INDEX)
#define G_DCB1_MTP_INDEX(x)                _DD_GETVALUE(x, S_DCB1_MTP_INDEX, M_DCB1_MTP_INDEX)
#define S_DCB1_ECN                         29                              
#define M_DCB1_ECN                         _DD_MAKEMASK(2, S_DCB1_ECN)     
#define V_DCB1_ECN(x)                      _DD_MAKEVALUE(x,S_DCB1_ECN)     
#define G_DCB1_ECN(x)                      _DD_GETVALUE(x, S_DCB1_ECN, M_DCB1_ECN)
#define S_DCB1_CHANGE_ECN                  31                              
#define M_DCB1_CHANGE_ECN                  _DD_MAKEMASK(1, S_DCB1_CHANGE_ECN)
#define V_DCB1_CHANGE_ECN(x)               _DD_MAKEVALUE(x,S_DCB1_CHANGE_ECN)
#define G_DCB1_CHANGE_ECN(x)               _DD_GETVALUE(x, S_DCB1_CHANGE_ECN, M_DCB1_CHANGE_ECN)
#define S_DCB1_TIMESTAMP                   0                               
#define M_DCB1_TIMESTAMP                   _DD_MAKEMASK(32, S_DCB1_TIMESTAMP)
#define V_DCB1_TIMESTAMP(x)                _DD_MAKEVALUE(x,S_DCB1_TIMESTAMP)
#define G_DCB1_TIMESTAMP(x)                _DD_GETVALUE(x, S_DCB1_TIMESTAMP, M_DCB1_TIMESTAMP)
#define S_DCB1_DSCP                        0                               
#define M_DCB1_DSCP                        _DD_MAKEMASK(6, S_DCB1_DSCP)    
#define V_DCB1_DSCP(x)                     _DD_MAKEVALUE(x,S_DCB1_DSCP)    
#define G_DCB1_DSCP(x)                     _DD_GETVALUE(x, S_DCB1_DSCP, M_DCB1_DSCP)
#define S_DCB1_OAM_COMMAND                 0                               
#define M_DCB1_OAM_COMMAND                 _DD_MAKEMASK(4, S_DCB1_OAM_COMMAND)
#define V_DCB1_OAM_COMMAND(x)              _DD_MAKEVALUE(x,S_DCB1_OAM_COMMAND)
#define G_DCB1_OAM_COMMAND(x)              _DD_GETVALUE(x, S_DCB1_OAM_COMMAND, M_DCB1_OAM_COMMAND)
#define S_DCB1_CHANGE_DSCP                 6                               
#define M_DCB1_CHANGE_DSCP                 _DD_MAKEMASK(1, S_DCB1_CHANGE_DSCP)
#define V_DCB1_CHANGE_DSCP(x)              _DD_MAKEVALUE(x,S_DCB1_CHANGE_DSCP)
#define G_DCB1_CHANGE_DSCP(x)              _DD_GETVALUE(x, S_DCB1_CHANGE_DSCP, M_DCB1_CHANGE_DSCP)
#define S_DCB1_VNTAG_ACTION                7                               
#define M_DCB1_VNTAG_ACTION                _DD_MAKEMASK(2, S_DCB1_VNTAG_ACTION)
#define V_DCB1_VNTAG_ACTION(x)             _DD_MAKEVALUE(x,S_DCB1_VNTAG_ACTION)
#define G_DCB1_VNTAG_ACTION(x)             _DD_GETVALUE(x, S_DCB1_VNTAG_ACTION, M_DCB1_VNTAG_ACTION)
#define S_DCB1_OUTER_CFI                   9                               
#define M_DCB1_OUTER_CFI                   _DD_MAKEMASK(1, S_DCB1_OUTER_CFI)
#define V_DCB1_OUTER_CFI(x)                _DD_MAKEVALUE(x,S_DCB1_OUTER_CFI)
#define G_DCB1_OUTER_CFI(x)                _DD_GETVALUE(x, S_DCB1_OUTER_CFI, M_DCB1_OUTER_CFI)
#define S_DCB1_OUTER_PRI                   10                              
#define M_DCB1_OUTER_PRI                   _DD_MAKEMASK(3, S_DCB1_OUTER_PRI)
#define V_DCB1_OUTER_PRI(x)                _DD_MAKEVALUE(x,S_DCB1_OUTER_PRI)
#define G_DCB1_OUTER_PRI(x)                _DD_GETVALUE(x, S_DCB1_OUTER_PRI, M_DCB1_OUTER_PRI)
#define S_DCB1_TUNNEL_DECAP_TYPE           13                              
#define M_DCB1_TUNNEL_DECAP_TYPE           _DD_MAKEMASK(5, S_DCB1_TUNNEL_DECAP_TYPE)
#define V_DCB1_TUNNEL_DECAP_TYPE(x)        _DD_MAKEVALUE(x,S_DCB1_TUNNEL_DECAP_TYPE)
#define G_DCB1_TUNNEL_DECAP_TYPE(x)        _DD_GETVALUE(x, S_DCB1_TUNNEL_DECAP_TYPE, M_DCB1_TUNNEL_DECAP_TYPE)
#define S_DCB1_INNER_VID                   18                              
#define M_DCB1_INNER_VID                   _DD_MAKEMASK(12, S_DCB1_INNER_VID)
#define V_DCB1_INNER_VID(x)                _DD_MAKEVALUE(x,S_DCB1_INNER_VID)
#define G_DCB1_INNER_VID(x)                _DD_GETVALUE(x, S_DCB1_INNER_VID, M_DCB1_INNER_VID)
#define S_DCB1_INNER_CFI                   30                              
#define M_DCB1_INNER_CFI                   _DD_MAKEMASK(1, S_DCB1_INNER_CFI)
#define V_DCB1_INNER_CFI(x)                _DD_MAKEVALUE(x,S_DCB1_INNER_CFI)
#define G_DCB1_INNER_CFI(x)                _DD_GETVALUE(x, S_DCB1_INNER_CFI, M_DCB1_INNER_CFI)
#define S_DCB1_EP_MIRROR                   31                              
#define M_DCB1_EP_MIRROR                   _DD_MAKEMASK(1, S_DCB1_EP_MIRROR)
#define V_DCB1_EP_MIRROR(x)                _DD_MAKEVALUE(x,S_DCB1_EP_MIRROR)
#define G_DCB1_EP_MIRROR(x)                _DD_GETVALUE(x, S_DCB1_EP_MIRROR, M_DCB1_EP_MIRROR)
#define S_DCB1_INNER_PRI                   0                               
#define M_DCB1_INNER_PRI                   _DD_MAKEMASK(3, S_DCB1_INNER_PRI)
#define V_DCB1_INNER_PRI(x)                _DD_MAKEVALUE(x,S_DCB1_INNER_PRI)
#define G_DCB1_INNER_PRI(x)                _DD_GETVALUE(x, S_DCB1_INNER_PRI, M_DCB1_INNER_PRI)
#define S_DCB1_REGEN_CRC                   3                               
#define M_DCB1_REGEN_CRC                   _DD_MAKEMASK(1, S_DCB1_REGEN_CRC)
#define V_DCB1_REGEN_CRC(x)                _DD_MAKEVALUE(x,S_DCB1_REGEN_CRC)
#define G_DCB1_REGEN_CRC(x)                _DD_GETVALUE(x, S_DCB1_REGEN_CRC, M_DCB1_REGEN_CRC)
#define S_DCB1_REPLICATION_OR_NHOP_INDEX   4                               
#define M_DCB1_REPLICATION_OR_NHOP_INDEX   _DD_MAKEMASK(19, S_DCB1_REPLICATION_OR_NHOP_INDEX)
#define V_DCB1_REPLICATION_OR_NHOP_INDEX(x) _DD_MAKEVALUE(x,S_DCB1_REPLICATION_OR_NHOP_INDEX)
#define G_DCB1_REPLICATION_OR_NHOP_INDEX(x) _DD_GETVALUE(x, S_DCB1_REPLICATION_OR_NHOP_INDEX, M_DCB1_REPLICATION_OR_NHOP_INDEX)
#define S_DCB1_VFI_VALID                   23                              
#define M_DCB1_VFI_VALID                   _DD_MAKEMASK(1, S_DCB1_VFI_VALID)
#define V_DCB1_VFI_VALID(x)                _DD_MAKEVALUE(x,S_DCB1_VFI_VALID)
#define G_DCB1_VFI_VALID(x)                _DD_GETVALUE(x, S_DCB1_VFI_VALID, M_DCB1_VFI_VALID)
#define S_DCB1_ORIG_DEST_PP_PORT           24                              
#define M_DCB1_ORIG_DEST_PP_PORT           _DD_MAKEMASK(7, S_DCB1_ORIG_DEST_PP_PORT)
#define V_DCB1_ORIG_DEST_PP_PORT(x)        _DD_MAKEVALUE(x,S_DCB1_ORIG_DEST_PP_PORT)
#define G_DCB1_ORIG_DEST_PP_PORT(x)        _DD_GETVALUE(x, S_DCB1_ORIG_DEST_PP_PORT, M_DCB1_ORIG_DEST_PP_PORT)
#define S_DCB1_MODULE_HEADER               0                               
#define M_DCB1_MODULE_HEADER               _DD_MAKEMASK(128, S_DCB1_MODULE_HEADER)
#define V_DCB1_MODULE_HEADER(x)            _DD_MAKEVALUE(x,S_DCB1_MODULE_HEADER)
#define G_DCB1_MODULE_HEADER(x)            _DD_GETVALUE(x, S_DCB1_MODULE_HEADER, M_DCB1_MODULE_HEADER)
#define S_DCB1_SRC_PORT                    0                               
#define M_DCB1_SRC_PORT                    _DD_MAKEMASK(5, S_DCB1_SRC_PORT)
#define V_DCB1_SRC_PORT(x)                 _DD_MAKEVALUE(x,S_DCB1_SRC_PORT)
#define G_DCB1_SRC_PORT(x)                 _DD_GETVALUE(x, S_DCB1_SRC_PORT, M_DCB1_SRC_PORT)
#define S_DCB1_PKT_LENGTH                  8                               
#define M_DCB1_PKT_LENGTH                  _DD_MAKEMASK(14, S_DCB1_PKT_LENGTH)
#define V_DCB1_PKT_LENGTH(x)               _DD_MAKEVALUE(x,S_DCB1_PKT_LENGTH)
#define G_DCB1_PKT_LENGTH(x)               _DD_GETVALUE(x, S_DCB1_PKT_LENGTH, M_DCB1_PKT_LENGTH)
#define S_DCB1_MATCHED_RULE                22                              
#define M_DCB1_MATCHED_RULE                _DD_MAKEMASK(8, S_DCB1_MATCHED_RULE)
#define V_DCB1_MATCHED_RULE(x)             _DD_MAKEVALUE(x,S_DCB1_MATCHED_RULE)
#define G_DCB1_MATCHED_RULE(x)             _DD_GETVALUE(x, S_DCB1_MATCHED_RULE, M_DCB1_MATCHED_RULE)
#define S_DCB1_HGI                         30                              
#define M_DCB1_HGI                         _DD_MAKEMASK(2, S_DCB1_HGI)     
#define V_DCB1_HGI(x)                      _DD_MAKEVALUE(x,S_DCB1_HGI)     
#define G_DCB1_HGI(x)                      _DD_GETVALUE(x, S_DCB1_HGI, M_DCB1_HGI)
#define S_DCB1_QUEUE_NUM                   0                               
#define M_DCB1_QUEUE_NUM                   _DD_MAKEMASK(15, S_DCB1_QUEUE_NUM)
#define V_DCB1_QUEUE_NUM(x)                _DD_MAKEVALUE(x,S_DCB1_QUEUE_NUM)
#define G_DCB1_QUEUE_NUM(x)                _DD_GETVALUE(x, S_DCB1_QUEUE_NUM, M_DCB1_QUEUE_NUM)
#define S_DCB1_CPU_COS                     0                               
#define M_DCB1_CPU_COS                     _DD_MAKEMASK(6, S_DCB1_CPU_COS) 
#define V_DCB1_CPU_COS(x)                  _DD_MAKEVALUE(x,S_DCB1_CPU_COS) 
#define G_DCB1_CPU_COS(x)                  _DD_GETVALUE(x, S_DCB1_CPU_COS, M_DCB1_CPU_COS)
#define S_DCB1_OLP_ENCAPSULATED_OAM_PKT    15                              
#define M_DCB1_OLP_ENCAPSULATED_OAM_PKT    _DD_MAKEMASK(1, S_DCB1_OLP_ENCAPSULATED_OAM_PKT)
#define V_DCB1_OLP_ENCAPSULATED_OAM_PKT(x) _DD_MAKEVALUE(x,S_DCB1_OLP_ENCAPSULATED_OAM_PKT)
#define G_DCB1_OLP_ENCAPSULATED_OAM_PKT(x) _DD_GETVALUE(x, S_DCB1_OLP_ENCAPSULATED_OAM_PKT, M_DCB1_OLP_ENCAPSULATED_OAM_PKT)
#define S_DCB1_CPU_OPCODE_TYPE             16                              
#define M_DCB1_CPU_OPCODE_TYPE             _DD_MAKEMASK(4, S_DCB1_CPU_OPCODE_TYPE)
#define V_DCB1_CPU_OPCODE_TYPE(x)          _DD_MAKEVALUE(x,S_DCB1_CPU_OPCODE_TYPE)
#define G_DCB1_CPU_OPCODE_TYPE(x)          _DD_GETVALUE(x, S_DCB1_CPU_OPCODE_TYPE, M_DCB1_CPU_OPCODE_TYPE)
#define S_DCB1_OUTER_VID                   20                              
#define M_DCB1_OUTER_VID                   _DD_MAKEMASK(12, S_DCB1_OUTER_VID)
#define V_DCB1_OUTER_VID(x)                _DD_MAKEVALUE(x,S_DCB1_OUTER_VID)
#define G_DCB1_OUTER_VID(x)                _DD_GETVALUE(x, S_DCB1_OUTER_VID, M_DCB1_OUTER_VID)
#define S_DCB1_REASON                      0                               
#define M_DCB1_REASON                      _DD_MAKEMASK(64, S_DCB1_REASON) 
#define V_DCB1_REASON(x)                   _DD_MAKEVALUE(x,S_DCB1_REASON)  
#define G_DCB1_REASON(x)                   _DD_GETVALUE(x, S_DCB1_REASON, M_DCB1_REASON)
#define S_DCB1_MA_PTR                      18                              
#define M_DCB1_MA_PTR                      _DD_MAKEMASK(13, S_DCB1_MA_PTR) 
#define V_DCB1_MA_PTR(x)                   _DD_MAKEVALUE(x,S_DCB1_MA_PTR)  
#define G_DCB1_MA_PTR(x)                   _DD_GETVALUE(x, S_DCB1_MA_PTR, M_DCB1_MA_PTR)
#define S_DCB1_BYTE_COUNT                  0                               
#define M_DCB1_BYTE_COUNT                  _DD_MAKEMASK(16, S_DCB1_BYTE_COUNT)
#define V_DCB1_BYTE_COUNT(x)               _DD_MAKEVALUE(x,S_DCB1_BYTE_COUNT)
#define G_DCB1_BYTE_COUNT(x)               _DD_GETVALUE(x, S_DCB1_BYTE_COUNT, M_DCB1_BYTE_COUNT)
#define S_DCB1_CHAIN                       16                              
#define M_DCB1_CHAIN                       _DD_MAKEMASK(1, S_DCB1_CHAIN)   
#define V_DCB1_CHAIN(x)                    _DD_MAKEVALUE(x,S_DCB1_CHAIN)   
#define G_DCB1_CHAIN(x)                    _DD_GETVALUE(x, S_DCB1_CHAIN, M_DCB1_CHAIN)
#define S_DCB1_SG                          17                              
#define M_DCB1_SG                          _DD_MAKEMASK(1, S_DCB1_SG)      
#define V_DCB1_SG(x)                       _DD_MAKEVALUE(x,S_DCB1_SG)      
#define G_DCB1_SG(x)                       _DD_GETVALUE(x, S_DCB1_SG, M_DCB1_SG)
#define S_DCB1_RELOAD                      18                              
#define M_DCB1_RELOAD                      _DD_MAKEMASK(1, S_DCB1_RELOAD)  
#define V_DCB1_RELOAD(x)                   _DD_MAKEVALUE(x,S_DCB1_RELOAD)  
#define G_DCB1_RELOAD(x)                   _DD_GETVALUE(x, S_DCB1_RELOAD, M_DCB1_RELOAD)
#define S_DCB1_ADDR                        0                               
#define M_DCB1_ADDR                        _DD_MAKEMASK(32, S_DCB1_ADDR)   
#define V_DCB1_ADDR(x)                     _DD_MAKEVALUE(x,S_DCB1_ADDR)    
#define G_DCB1_ADDR(x)                     _DD_GETVALUE(x, S_DCB1_ADDR, M_DCB1_ADDR)
/* Phase 0 of S-bus message  */
#define S_SMHDR_NACK                       0                               
#define M_SMHDR_NACK                       _DD_MAKEMASK(1, S_SMHDR_NACK)   
#define V_SMHDR_NACK(x)                    _DD_MAKEVALUE(x,S_SMHDR_NACK)   
#define G_SMHDR_NACK(x)                    _DD_GETVALUE(x, S_SMHDR_NACK, M_SMHDR_NACK)
#define S_SMHDR_BANK                       1                               
#define M_SMHDR_BANK                       _DD_MAKEMASK(2, S_SMHDR_BANK)   
#define V_SMHDR_BANK(x)                    _DD_MAKEVALUE(x,S_SMHDR_BANK)   
#define G_SMHDR_BANK(x)                    _DD_GETVALUE(x, S_SMHDR_BANK, M_SMHDR_BANK)
#define S_SMHDR_DMA                        3                               
#define M_SMHDR_DMA                        _DD_MAKEMASK(1, S_SMHDR_DMA)    
#define V_SMHDR_DMA(x)                     _DD_MAKEVALUE(x,S_SMHDR_DMA)    
#define G_SMHDR_DMA(x)                     _DD_GETVALUE(x, S_SMHDR_DMA, M_SMHDR_DMA)
#define S_SMHDR_ECODE                      4                               
#define M_SMHDR_ECODE                      _DD_MAKEMASK(2, S_SMHDR_ECODE)  
#define V_SMHDR_ECODE(x)                   _DD_MAKEVALUE(x,S_SMHDR_ECODE)  
#define G_SMHDR_ECODE(x)                   _DD_GETVALUE(x, S_SMHDR_ECODE, M_SMHDR_ECODE)
#define S_SMHDR_ERR                        6                               
#define M_SMHDR_ERR                        _DD_MAKEMASK(1, S_SMHDR_ERR)    
#define V_SMHDR_ERR(x)                     _DD_MAKEVALUE(x,S_SMHDR_ERR)    
#define G_SMHDR_ERR(x)                     _DD_GETVALUE(x, S_SMHDR_ERR, M_SMHDR_ERR)
#define S_SMHDR_DATA_LEN                   7                               
#define M_SMHDR_DATA_LEN                   _DD_MAKEMASK(7, S_SMHDR_DATA_LEN)
#define V_SMHDR_DATA_LEN(x)                _DD_MAKEVALUE(x,S_SMHDR_DATA_LEN)
#define G_SMHDR_DATA_LEN(x)                _DD_GETVALUE(x, S_SMHDR_DATA_LEN, M_SMHDR_DATA_LEN)
#define S_SMHDR_DEST_BLOCK                 19                              
#define M_SMHDR_DEST_BLOCK                 _DD_MAKEMASK(7, S_SMHDR_DEST_BLOCK)
#define V_SMHDR_DEST_BLOCK(x)              _DD_MAKEVALUE(x,S_SMHDR_DEST_BLOCK)
#define G_SMHDR_DEST_BLOCK(x)              _DD_GETVALUE(x, S_SMHDR_DEST_BLOCK, M_SMHDR_DEST_BLOCK)
#define S_SMHDR_OP_CODE                    26                              
#define M_SMHDR_OP_CODE                    _DD_MAKEMASK(6, S_SMHDR_OP_CODE)
#define V_SMHDR_OP_CODE(x)                 _DD_MAKEVALUE(x,S_SMHDR_OP_CODE)
#define G_SMHDR_OP_CODE(x)                 _DD_GETVALUE(x, S_SMHDR_OP_CODE, M_SMHDR_OP_CODE)
#endif /* __BCM5346X_REGS_H__ */
