/*
 * $Id: chipman.pm,v 1.2 Broadcom SDK n *
 * $Copyright: Copyright 2016 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated from the registers file.
 * Edits to this file will be lost when it is regenerated.
 */
#ifndef __BCM5343X_REGS_H__
#define __BCM5343X_REGS_H__

/* Blocks */
#define XLPORT0_BLOCK_ID                4
#define XLPORT1_BLOCK_ID                5
#define IPIPE_BLOCK_ID                  10
#define EPIPE_BLOCK_ID                  11
#define MMU_BLOCK_ID                    12
#define OTPC_BLOCK_ID                   13
#define CMIC_BLOCK_ID                   14
#define IPROC_BLOCK_ID                  15
#define TOP_BLOCK_ID                    16
#define AVS_BLOCK_ID                    17
#define SER_BLOCK_ID                    19
#define PGW_GE0_BLOCK_ID                32
#define GPORT0_BLOCK_ID                 33
#define GPORT1_BLOCK_ID                 34
#define PMQ0_BLOCK_ID                   35
#define PGW_GE1_BLOCK_ID                36
#define GPORT2_BLOCK_ID                 37
#define GPORT3_BLOCK_ID                 38
#define PMQ1_BLOCK_ID                   39

/* Physical Port */
#define PHY_GPORT0_BASE                     2 /* physical port 2 ~ 9 */
#define PHY_GPORT1_BASE                     10 /* physical port 10 ~ 17 */
#define PHY_GPORT2_BASE                     18 /* physical port 18 ~ 25 */
#define PHY_GPORT3_BASE                     26 /* physical port 26 ~ 33 */
#define PHY_XLPORT0_BASE                    34 /* physical port 34 ~ 37 */
#define PHY_XLPORT1_BASE                    38 /* physical port 38 ~ 41 */

/* PMQ0 PMQ1 */
#define R_CHIP_CONFIG                          (0x02010100)
#define R_CHIP_INDACC_CTLSTS                   (0x02010400)
#define R_CHIP_INDACC_RDATA                    (0x02010600)
#define R_CHIP_INDACC_WDATA                    (0x02010500)
#define R_CHIP_SBUS_CFG                        (0x02010200)
#define R_CHIP_SWRST                           (0x02010300)
#define R_CHIP_UMACSPEED                       (0x02010700)
#define R_GPORT_WC_UCMEM_CTRL                  (0x02020500)
#define M_GPORT_WC_UCMEM_DATA(idx)             (0x00000000+(idx))
#define R_GPORT_XGXS0_CTRL_REG                 (0x02020000)
/* AVS */
#define R_AVS_REG_HW_MNTR_SEQUENCER_MASK_PVT_MNTR   AVS_BLOCK_ID, (0x02003c00)
/* XLPORT0 XLPORT1 */
#define R_PGW_XL_CONFIG(port)                  (0x00080000 + (port))
#define R_PGW_XL_ECC_CONTROL                   (0x02080400)
#define R_PGW_XL_TXFIFO_CTRL(port)             (0x00080100 + (port))
#define R_RALN(port)                           (0x00001600 + (port))
#define R_RBCA(port)                           (0x00000e00 + (port))
#define R_RBYT(port)                           (0x00003d00 + (port))
#define R_RFCS(port)                           (0x00000f00 + (port))
#define R_RMCA(port)                           (0x00000d00 + (port))
#define R_ROVR(port)                           (0x00001a00 + (port))
#define R_RPKT(port)                           (0x00000b00 + (port))
#define R_RUCA(port)                           (0x00000c00 + (port))
#define R_RXPF(port)                           (0x00001100 + (port))
#define R_RX_EEE_LPI_DURATION_COUNTER(port)    (0x00003700 + (port))
#define R_RX_EEE_LPI_EVENT_COUNTER(port)       (0x00003600 + (port))
#define R_TBCA(port)                           (0x00004f00 + (port))
#define R_TBYT(port)                           (0x00006f00 + (port))
#define R_TFCS(port)                           (0x00005300 + (port))
#define R_TMCA(port)                           (0x00004e00 + (port))
#define R_TOVR(port)                           (0x00005500 + (port))
#define R_TPKT(port)                           (0x00004c00 + (port))
#define R_TUCA(port)                           (0x00004d00 + (port))
#define R_TXPF(port)                           (0x00005000 + (port))
#define R_TX_EEE_LPI_DURATION_COUNTER(port)    (0x00006b00 + (port))
#define R_TX_EEE_LPI_EVENT_COUNTER(port)       (0x00006a00 + (port))
#define R_XLMAC_CTRL(port)                     (0x00060000 + (port))
#define R_XLMAC_EEE_CTRL(port)                 (0x00061a00 + (port))
#define R_XLMAC_EEE_TIMERS(port)               (0x00061b00 + (port))
#define R_XLMAC_LLFC_CTRL(port)                (0x00061200 + (port))
#define R_XLMAC_MODE(port)                     (0x00060100 + (port))
#define R_XLMAC_PAUSE_CTRL(port)               (0x00060d00 + (port))
#define R_XLMAC_PFC_CTRL(port)                 (0x00060e00 + (port))
#define R_XLMAC_RX_CTRL(port)                  (0x00060600 + (port))
#define R_XLMAC_RX_LSS_CTRL(port)              (0x00060a00 + (port))
#define R_XLMAC_RX_MAX_SIZE(port)              (0x00060800 + (port))
#define R_XLMAC_TXFIFO_CELL_CNT(port)          (0x00062c00 + (port))
#define R_XLMAC_TXFIFO_CELL_REQ_CNT(port)      (0x00062d00 + (port))
#define R_XLMAC_TX_CTRL(port)                  (0x00060400 + (port))
#define R_XLMAC_TX_MAC_SA(port)                (0x00060500 + (port))
#define R_XLPORT_LED_CHAIN_CONFIG              (0x02022300)
/* EPIPE */
#define R_EGR_CONFIG                           EPIPE_BLOCK_ID, (0x06000400)
#define M_EGR_EM_MTP_INDEX(idx)                EPIPE_BLOCK_ID, (0x14380000+(idx))
#define M_EGR_ENABLE(idx)                      EPIPE_BLOCK_ID, (0x30800000+(idx))
#define R_EGR_HW_RESET_CONTROL_0               EPIPE_BLOCK_ID, (0x02000000)
#define R_EGR_HW_RESET_CONTROL_1               EPIPE_BLOCK_ID, (0x02000100)
#define M_EGR_IM_MTP_INDEX(idx)                EPIPE_BLOCK_ID, (0x14340000+(idx))
#define R_EGR_LOGICAL_TO_PHYSICAL_PORT_NUMBER_MAPPING(port)   EPIPE_BLOCK_ID, (0x30001c00 + (port))
#define R_EGR_PORT_64(port)                    EPIPE_BLOCK_ID, (0x04000900 + (port))
#define R_EGR_PORT_BUFFER_CLK_SHUTDOWN         EPIPE_BLOCK_ID, (0x32011300)
#define M_EGR_PORT_CREDIT_RESET(idx)           EPIPE_BLOCK_ID, (0x300c0000+(idx))
#define M_EGR_PORT_REQUESTS(idx)               EPIPE_BLOCK_ID, (0x30040000+(idx))
#define M_EGR_VLAN(idx)                        EPIPE_BLOCK_ID, (0x10140000+(idx))
#define R_EGR_VLAN_CONTROL_1(port)             EPIPE_BLOCK_ID, (0x04000b00 + (port))
#define M_EGR_VLAN_STG(idx)                    EPIPE_BLOCK_ID, (0x10180000+(idx))
/* PGW_GE0 PGW_GE1 */
#define R_PGW_GE_RXFIFO_SOFT_RESET             (0x02090400)
/* TOP */
#define R_PGW_CTRL_0                           TOP_BLOCK_ID, (0x02058000)
#define R_RESCAL_STATUS_0                      TOP_BLOCK_ID, (0x02057a00)
#define R_SPEED_LIMIT_ENTRY_PHYSICAL_PORT_NUMBER(idx)   TOP_BLOCK_ID, (0x02051800 + (((idx) * 4) << 8))
#define R_TOP_CLOCKING_ENFORCE_PSG             TOP_BLOCK_ID, (0x02032400)
#define R_TOP_MISC_CONTROL_1                   TOP_BLOCK_ID, (0x02031400)
#define R_TOP_MISC_CONTROL_2                   TOP_BLOCK_ID, (0x02079800)
#define R_TOP_MISC_CONTROL_3                   TOP_BLOCK_ID, (0x02079a00)
#define R_TOP_MISC_STATUS                      TOP_BLOCK_ID, (0x02031800)
#define R_TOP_PARALLEL_LED_CTRL                TOP_BLOCK_ID, (0x02035000)
#define R_TOP_PVTMON_CTRL_0                    TOP_BLOCK_ID, (0x02050000)
#define R_TOP_SOFT_RESET_REG                   TOP_BLOCK_ID, (0x02030400)
#define R_TOP_SOFT_RESET_REG_2                 TOP_BLOCK_ID, (0x02030800)
#define R_TOP_STRAP_STATUS                     TOP_BLOCK_ID, (0x0207d400)
#define R_TOP_TOP_CORE_PLL_STATUS_1            TOP_BLOCK_ID, (0x02040800)
#define R_TOP_XG1_LCPLL_FBDIV_CTRL_0           TOP_BLOCK_ID, (0x0207ac00)
#define R_TOP_XG1_LCPLL_FBDIV_CTRL_1           TOP_BLOCK_ID, (0x0207b000)
#define R_TOP_XG_PLL0_CTRL_0                   TOP_BLOCK_ID, (0x02042000)
#define R_TOP_XG_PLL0_CTRL_1                   TOP_BLOCK_ID, (0x02042400)
#define R_TOP_XG_PLL0_CTRL_2                   TOP_BLOCK_ID, (0x02042800)
#define R_TOP_XG_PLL0_CTRL_3                   TOP_BLOCK_ID, (0x02042c00)
#define R_TOP_XG_PLL0_CTRL_4                   TOP_BLOCK_ID, (0x02043000)
#define R_TOP_XG_PLL0_CTRL_6                   TOP_BLOCK_ID, (0x02043200)
#define R_TOP_XG_PLL0_STATUS                   TOP_BLOCK_ID, (0x02043400)
#define R_TOP_XG_PLL1_CTRL_0                   TOP_BLOCK_ID, (0x02043800)
#define R_TOP_XG_PLL1_CTRL_1                   TOP_BLOCK_ID, (0x02043c00)
#define R_TOP_XG_PLL1_CTRL_2                   TOP_BLOCK_ID, (0x02044000)
#define R_TOP_XG_PLL1_CTRL_3                   TOP_BLOCK_ID, (0x02044400)
#define R_TOP_XG_PLL1_CTRL_4                   TOP_BLOCK_ID, (0x02044800)
#define R_TOP_XG_PLL1_CTRL_5                   TOP_BLOCK_ID, (0x02044900)
#define R_TOP_XG_PLL1_CTRL_6                   TOP_BLOCK_ID, (0x02044a00)
#define R_TOP_XG_PLL1_STATUS                   TOP_BLOCK_ID, (0x02044c00)
/* MMU */
#define R_COSLCCOUNT(cos, port)                MMU_BLOCK_ID, (0x00010d00 + ((cos) << 8) + (port))
#define R_DYNCELLLIMIT(port)                   MMU_BLOCK_ID, (0x00012d00 + (port))
#define R_DYNRESETLIMPORT(port)                MMU_BLOCK_ID, (0x0000cb00 + (port))
#define R_DYNXQCNTPORT(port)                   MMU_BLOCK_ID, (0x0000ca00 + (port))
#define R_EGRMETERINGBUCKET(port)              MMU_BLOCK_ID, (0x00015700 + (port))
#define R_EGRMETERINGCONFIG(port)              MMU_BLOCK_ID, (0x00015600 + (port))
#define R_HOLCOSCELLMAXLIMIT(cos, port)        MMU_BLOCK_ID, (0x0000ed00 + ((cos) << 8) + (port))
#define R_HOLCOSMINXQCNT(cos, port)            MMU_BLOCK_ID, (0x00004800 + ((cos) << 8) + (port))
#define R_HOLCOSPKTRESETLIMIT(cos, port)       MMU_BLOCK_ID, (0x00002800 + ((cos) << 8) + (port))
#define R_HOLCOSPKTSETLIMIT(cos, port)         MMU_BLOCK_ID, (0x00000800 + ((cos) << 8) + (port))
#define R_IBPPKTSETLIMIT(port)                 MMU_BLOCK_ID, (0x00000000 + (port))
#define R_LOG_TO_PHY_PORT_MAPPING(port)        MMU_BLOCK_ID, (0x00086000 + (port))
#define R_LWMCOSCELLSETLIMIT(cos, port)        MMU_BLOCK_ID, (0x0000cd00 + ((cos) << 8) + (port))
#define R_MAXBUCKETCONFIG(cos, port)           MMU_BLOCK_ID, (0x00019c00 + ((cos) << 8) + (port))
#define R_MISCCONFIG                           MMU_BLOCK_ID, (0x02025a00)
#define R_MMUFLUSHCONTROL                      MMU_BLOCK_ID, (0x02030c00)
#define R_MMUPORTENABLE                        MMU_BLOCK_ID, (0x02025e00)
#define M_MMU_ARB_TDM_TABLE(idx)               MMU_BLOCK_ID, (0x2c080000+(idx))
#define M_MMU_IPMC_GROUP_TBL(aidx, idx)        MMU_BLOCK_ID, (0x280a0000+(((aidx)-2) * 0x4000)+(idx))
#define R_PGCELLLIMIT(idx, port)               MMU_BLOCK_ID, (0x00177000 + ((idx) << 8) + (port))
#define R_PGDISCARDSETLIMIT(idx, port)         MMU_BLOCK_ID, (0x00178000 + ((idx) << 8) + (port))
#define R_TOTALDYNCELLRESETLIMIT               MMU_BLOCK_ID, (0x02030400)
#define R_TOTALDYNCELLSETLIMIT                 MMU_BLOCK_ID, (0x02025b00)
#define R_WRRWEIGHT_COS0(port)                 MMU_BLOCK_ID, (0x00013300 + (port))
#define R_WRRWEIGHT_COS1(port)                 MMU_BLOCK_ID, (0x00013400 + (port))
#define R_WRRWEIGHT_COS2(port)                 MMU_BLOCK_ID, (0x00013500 + (port))
#define R_WRRWEIGHT_COS3(port)                 MMU_BLOCK_ID, (0x00013600 + (port))
#define R_WRRWEIGHT_COS4(port)                 MMU_BLOCK_ID, (0x00013700 + (port))
#define R_WRRWEIGHT_COS5(port)                 MMU_BLOCK_ID, (0x00013800 + (port))
#define R_WRRWEIGHT_COS6(port)                 MMU_BLOCK_ID, (0x00013900 + (port))
#define R_WRRWEIGHT_COS7(port)                 MMU_BLOCK_ID, (0x00013a00 + (port))
#define R_XQCOSARBSEL(port)                    MMU_BLOCK_ID, (0x00013200 + (port))
#define R_XQEMPTY(port)                        MMU_BLOCK_ID, (0x00012f00 + (port))
/* IPIPE */
#define R_AUX_ARB_CONTROL                      IPIPE_BLOCK_ID, (0x02000000)
#define R_AUX_ARB_CONTROL_2                    IPIPE_BLOCK_ID, (0x02000100)
#define M_COS_MAP(idx)                         IPIPE_BLOCK_ID, (0x404c0000+(idx))
#define R_DOS_CONTROL                          IPIPE_BLOCK_ID, (0x06000100)
#define R_DOS_CONTROL2                         IPIPE_BLOCK_ID, (0x06000200)
#define M_DSCP_TB(idx)                         IPIPE_BLOCK_ID, (0x24000000+(idx))
#define M_EGR_MASK(idx)                        IPIPE_BLOCK_ID, (0x40040000+(idx))
#define R_EMIRROR_CONTROL_64(port)             IPIPE_BLOCK_ID, (0x40000800 + (port))
#define M_EM_MTP_INDEX(idx)                    IPIPE_BLOCK_ID, (0x40340000+(idx))
#define R_EPC_LINK_BMAP_64                     IPIPE_BLOCK_ID, (0x42002700)
#define M_FP_COUNTER_TABLE(idx)                IPIPE_BLOCK_ID, (0x38140000+(idx))
#define M_FP_GLOBAL_MASK_TCAM(idx)             IPIPE_BLOCK_ID, (0x38180000+(idx))
#define M_FP_METER_TABLE(idx)                  IPIPE_BLOCK_ID, (0x38100000+(idx))
#define M_FP_POLICY_TABLE(idx)                 IPIPE_BLOCK_ID, (0x380c0000+(idx))
#define M_FP_PORT_FIELD_SEL(idx)               IPIPE_BLOCK_ID, (0x34000000+(idx))
#define R_FP_SLICE_ENABLE                      IPIPE_BLOCK_ID, (0x3a000000)
#define M_FP_SLICE_MAP                         IPIPE_BLOCK_ID, (0x38080000)
#define M_FP_STORM_CONTROL_METERS(idx)         IPIPE_BLOCK_ID, (0x381c0000+(idx))
#define M_FP_TCAM(idx)                         IPIPE_BLOCK_ID, (0x38040000+(idx))
#define M_FP_UDF_OFFSET(idx)                   IPIPE_BLOCK_ID, (0x08080000+(idx))
#define R_HASH_CONTROL                         IPIPE_BLOCK_ID, (0x06000400)
#define R_HOLD_COS(idx)                        IPIPE_BLOCK_ID, (0x42005b00 + ((idx) << 8))
#define R_HOLD_COS0                            IPIPE_BLOCK_ID, (0x42005b00)
#define R_HOLD_COS1                            IPIPE_BLOCK_ID, (0x42005c00)
#define R_HOLD_COS2                            IPIPE_BLOCK_ID, (0x42005d00)
#define R_HOLD_COS3                            IPIPE_BLOCK_ID, (0x42005e00)
#define R_HOLD_COS4                            IPIPE_BLOCK_ID, (0x42005f00)
#define R_HOLD_COS5                            IPIPE_BLOCK_ID, (0x42006000)
#define R_HOLD_COS6                            IPIPE_BLOCK_ID, (0x42006100)
#define R_HOLD_COS7                            IPIPE_BLOCK_ID, (0x42006200)
#define R_HOLD_COS_PORT_SELECT                 IPIPE_BLOCK_ID, (0x42006800)
#define R_IARB_TDM_CONTROL                     IPIPE_BLOCK_ID, (0x02000900)
#define M_IARB_TDM_TABLE(idx)                  IPIPE_BLOCK_ID, (0x00080000+(idx))
#define M_IFP_REDIRECTION_PROFILE(idx)         IPIPE_BLOCK_ID, (0x3c040000+(idx))
#define R_IGMP_MLD_PKT_CONTROL(port)           IPIPE_BLOCK_ID, (0x1c000500 + (port))
#define R_IING_EGRMSKBMAP_64(port)             IPIPE_BLOCK_ID, (0x40000f00 + (port))
#define M_IM_MTP_INDEX(idx)                    IPIPE_BLOCK_ID, (0x40300000+(idx))
#define R_ING_CONFIG_64                        IPIPE_BLOCK_ID, (0x06000000)
#define R_ING_EGRMSKBMAP_64(port)              IPIPE_BLOCK_ID, (0x40000e00 + (port))
#define R_ING_HW_RESET_CONTROL_1               IPIPE_BLOCK_ID, (0x02000200)
#define R_ING_HW_RESET_CONTROL_2               IPIPE_BLOCK_ID, (0x02000300)
#define R_ING_MISC_CONFIG                      IPIPE_BLOCK_ID, (0x42002e00)
#define M_ING_PHYSICAL_TO_LOGICAL_PORT_NUMBER_MAPPING_TABLE(idx)   IPIPE_BLOCK_ID, (0x000c0000+(idx))
#define M_ING_PRI_CNG_MAP(idx)                 IPIPE_BLOCK_ID, (0x34200000+(idx))
#define M_ING_VLAN_TAG_ACTION_PROFILE(idx)     IPIPE_BLOCK_ID, (0x0c2c0000+(idx))
#define R_IP_TO_CMICM_CREDIT_TRANSFER          IPIPE_BLOCK_ID, (0x02002300)
#define R_IUNKNOWN_MCAST_BLOCK_MASK_64(port)   IPIPE_BLOCK_ID, (0x40000300 + (port))
#define R_IUNKNOWN_UCAST_BLOCK_MASK_64(port)   IPIPE_BLOCK_ID, (0x40000100 + (port))
#define M_L2MC(idx)                            IPIPE_BLOCK_ID, (0x20000000+(idx))
#define R_L2_AGE_TIMER                         IPIPE_BLOCK_ID, (0x02000400)
#define R_L2_AUX_HASH_CONTROL                  IPIPE_BLOCK_ID, (0x1e000100)
#define M_L2_ENTRY(idx)                        IPIPE_BLOCK_ID, (0x1c000000+(idx))
#define M_L2_USER_ENTRY(idx)                   IPIPE_BLOCK_ID, (0x1c100000+(idx))
#define R_L2_USER_ENTRY_CAM_DBGCTRL            IPIPE_BLOCK_ID, (0x1e010000)
#define R_L3_AUX_HASH_CONTROL                  IPIPE_BLOCK_ID, (0x26000000)
#define R_MIRROR_CONTROL(port)                 IPIPE_BLOCK_ID, (0x40000600 + (port))
#define M_NONUCAST_TRUNK_BLOCK_MASK(idx)       IPIPE_BLOCK_ID, (0x40280000+(idx))
#define M_PORT(idx)                            IPIPE_BLOCK_ID, (0x04000000+(idx))
#define R_PROTOCOL_PKT_CONTROL(port)           IPIPE_BLOCK_ID, (0x1c000400 + (port))
#define M_SOURCE_TRUNK_MAP(idx)                IPIPE_BLOCK_ID, (0x08040000+(idx))
#define R_STORM_CONTROL_METER_CONFIG(port)     IPIPE_BLOCK_ID, (0x34000200 + (port))
#define R_SW2_FP_DST_ACTION_CONTROL            IPIPE_BLOCK_ID, (0x42003400)
#define R_SW2_RAM_CONTROL_4_64                 IPIPE_BLOCK_ID, (0x42010700)
#define M_SYSTEM_CONFIG_TABLE(idx)             IPIPE_BLOCK_ID, (0x040c0000+(idx))
#define M_TRUNK32_CONFIG_TABLE(idx)            IPIPE_BLOCK_ID, (0x04100000+(idx))
#define M_TRUNK32_PORT_TABLE(idx)              IPIPE_BLOCK_ID, (0x081c0000+(idx))
#define M_TRUNK_BITMAP(idx)                    IPIPE_BLOCK_ID, (0x40100000+(idx))
#define M_TRUNK_GROUP(idx)                     IPIPE_BLOCK_ID, (0x400c0000+(idx))
#define R_UNKNOWN_MCAST_BLOCK_MASK_64(port)    IPIPE_BLOCK_ID, (0x40000200 + (port))
#define R_UNKNOWN_UCAST_BLOCK_MASK_64(port)    IPIPE_BLOCK_ID, (0x40000000 + (port))
#define R_VFP_CAM_CONTROL_TM_7_THRU_0          IPIPE_BLOCK_ID, (0x0e011e00)
#define M_VLAN(idx)                            IPIPE_BLOCK_ID, (0x10000000+(idx))
#define R_VLAN_CTRL                            IPIPE_BLOCK_ID, (0x06000300)
#define R_VLAN_DEFAULT_PBM                     IPIPE_BLOCK_ID, (0x12000000)
#define M_VLAN_PROFILE(idx)                    IPIPE_BLOCK_ID, (0x10080000+(idx))
#define M_VLAN_STG(idx)                        IPIPE_BLOCK_ID, (0x10040000+(idx))
#define R_VLAN_SUBNET_CAM_DBGCTRL              IPIPE_BLOCK_ID, (0x0e010200)
/* GPORT0 GPORT1 GPORT2 GPORT3 */
#define R_COMMAND_CONFIG(port)                 (0x00010200 + (port))
#define R_FLUSH_CONTROL(port)                  (0x0001cd00 + (port))
#define R_FRM_LENGTH(port)                     (0x00010500 + (port))
#define R_GMII_EEE_DELAY_ENTRY_TIMER(port)     (0x00011b00 + (port))
#define R_GMII_EEE_WAKE_TIMER(port)            (0x00012100 + (port))
#define R_GPORT_CONFIG                         (0x02020000)
#define R_GPORT_LINK_STATUS_TO_CMIC            (0x02020500)
#define R_GPORT_RSV_MASK                       (0x02020600)
#define R_GPORT_STAT_UPDATE_MASK               (0x02020700)
#define R_GRALN(port)                          (0x00000400 + (port))
#define R_GRBCA(port)                          (0x00001000 + (port))
#define R_GRBYT(port)                          (0x00001c00 + (port))
#define R_GRFCS(port)                          (0x00000000 + (port))
#define R_GRMCA(port)                          (0x00000f00 + (port))
#define R_GROVR(port)                          (0x00000800 + (port))
#define R_GRPKT(port)                          (0x00001b00 + (port))
#define R_GRUC(port)                           (0x00001d00 + (port))
#define R_GRXPF(port)                          (0x00000200 + (port))
#define R_GRX_EEE_LPI_DURATION_COUNTER(port)   (0x00005700 + (port))
#define R_GRX_EEE_LPI_EVENT_COUNTER(port)      (0x00005600 + (port))
#define R_GTBCA(port)                          (0x00003e00 + (port))
#define R_GTBYT(port)                          (0x00004a00 + (port))
#define R_GTFCS(port)                          (0x00003200 + (port))
#define R_GTMCA(port)                          (0x00003d00 + (port))
#define R_GTOVR(port)                          (0x00003400 + (port))
#define R_GTPKT(port)                          (0x00004900 + (port))
#define R_GTUC(port)                           (0x00004b00 + (port))
#define R_GTXPF(port)                          (0x00003000 + (port))
#define R_GTX_EEE_LPI_DURATION_COUNTER(port)   (0x00005900 + (port))
#define R_GTX_EEE_LPI_EVENT_COUNTER(port)      (0x00005800 + (port))
#define R_MAC_0(port)                          (0x00010300 + (port))
#define R_MAC_1(port)                          (0x00010400 + (port))
#define R_MII_EEE_DELAY_ENTRY_TIMER(port)      (0x00011a00 + (port))
#define R_MII_EEE_WAKE_TIMER(port)             (0x00012000 + (port))
#define R_TX_IPG_LENGTH(port)                  (0x00011700 + (port))
#define R_UMAC_EEE_CTRL(port)                  (0x00011900 + (port))
#define R_UMAC_EEE_REF_COUNT(port)             (0x00011c00 + (port))
/* CMIC */
#define CMIC_CMC1_CH0_DMA_CTRL                 (0x03232140)
#define CMIC_CMC1_CH1_COS_CTRL_RX_0            (0x03232170)
#define CMIC_CMC1_CH1_DMA_CTRL                 (0x03232144)
#define CMIC_CMC1_CHx_DMA_CTRL(idx)            (0x03232140 + (idx) * 4)
#define CMIC_CMC1_DMA_DESC(idx)                (0x03232158 + (idx) * 4)
#define CMIC_CMC1_DMA_STAT                     (0x03232150)
#define CMIC_CMC1_DMA_STAT_CLR                 (0x032321a4)
#define CMIC_CMC1_HOSTMEM_ADDR_REMAP_0         (0x03232474)
#define CMIC_CMC1_HOSTMEM_ADDR_REMAP_1         (0x03232478)
#define CMIC_CMC1_HOSTMEM_ADDR_REMAP_2         (0x0323247c)
#define CMIC_CMC1_HOSTMEM_ADDR_REMAP_3         (0x032324ac)
#define CMIC_CMC1_MIIM_ADDRESS                 (0x03232088)
#define CMIC_CMC1_MIIM_CTRL                    (0x0323208c)
#define CMIC_CMC1_MIIM_PARAM                   (0x03232080)
#define CMIC_CMC1_MIIM_READ_DATA               (0x03232084)
#define CMIC_CMC1_MIIM_STAT                    (0x03232090)
#define CMIC_CMC1_SCHAN_ACK_DATA_BEAT_COUNT    (0x03232004)
#define CMIC_CMC1_SCHAN_CTRL                   (0x03232000)
#define CMIC_CMC1_SCHAN_ERR                    (0x03232008)
#define CMIC_CPS_RESET                         (0x03210220)
#define CMIC_DEV_REV_ID                        (0x03210224)
#define CMIC_GP_DATA_IN                        (0x03202000)
#define CMIC_GP_DATA_OUT                       (0x03202004)
#define CMIC_GP_OUT_EN                         (0x03202008)
#define CMIC_LEDUP0_CTRL                       (0x03220000)
#define CMIC_LEDUP0_PORT_ORDER_REMAP_0_3       (0x03220010)
#define CMIC_LEDUP0_PORT_ORDER_REMAP_60_63     (0x0322004c)
#define CMIC_LEDUP_DATA_RAM_D(idx)             (0x03220400 + (idx)*4)
#define CMIC_LEDUP_PROGRAM_RAM_D(idx)          (0x03220800 + (idx)*4)
#define CMIC_PCIE_USERIF_PURGE_CONTROL         (0x03210260)
#define CMIC_RATE_ADJUST_EXT_MDIO              (0x03211000)
#define CMIC_RATE_ADJUST_INT_MDIO              (0x03211004)
#define CMIC_RXBUF_EPINTF_RELEASE_ALL_CREDITS   (0x0321a000)
#define CMIC_SBUS_RING_MAP_0_7                 (0x03210098)
#define CMIC_SBUS_RING_MAP_16_23               (0x032100a0)
#define CMIC_SBUS_RING_MAP_24_31               (0x032100a4)
#define CMIC_SBUS_RING_MAP_32_39               (0x032100a8)
#define CMIC_SBUS_RING_MAP_40_47               (0x032100ac)
#define CMIC_SBUS_RING_MAP_8_15                (0x0321009c)
#define CMIC_SBUS_TIMEOUT                      (0x03210094)
#define CMIC_SEMAPHORE_1                       (0x03210300)
#define CMIC_SEMAPHORE_1_SHADOW                (0x03210304)
#define CMIC_SEMAPHORE_2                       (0x03210308)
#define CMIC_SEMAPHORE_2_SHADOW                (0x0321030c)
#define CMIC_SEMAPHORE_3                       (0x03210310)
#define CMIC_SEMAPHORE_3_SHADOW                (0x03210314)
#define R_CMIC_SCHAN_D(idx)                    (0x0323200c + (idx)*4)
/* IPROC */
#define R_CCG_GP_DATA_IN                       (0x1800a000)
#define R_CCG_GP_DATA_OUT                      (0x1800a004)
#define R_CCG_GP_OUT_EN                        (0x1800a008)
#define R_CCS_GP_DATA_IN                       (0x18030000)
#define R_CCS_GP_DATA_OUT                      (0x18030004)
#define R_CCS_GP_OUT_EN                        (0x18030008)
#define R_CMICD_M0_IDM_IO_CONTROL_DIRECT       (0x18103408)
#define R_CMICD_S0_IDM_IO_CONTROL_DIRECT       (0x1810a408)
#define R_CHIPCOMMONG_MII_MANAGEMENT_COMMAND_DATA   (0x18002004)
#define R_CHIPCOMMONG_MII_MANAGEMENT_CONTROL   (0x18002000)
#define R_IHOST_SCU_CONTROL                    (0x19020000)



/* Fields Marcos */
#define _DD_MAKEMASK1(n) (1 << (n))
#define _DD_MAKEMASK(v,n) ((((1)<<(v))-1) << (n))
#define _DD_MAKEVALUE(v,n) ((v) << (n))
#define _DD_GETVALUE(v,n,m) (((v) & (m)) >> (n))
/* Packet DMA descriptor.  */
#define S_DCB1_BYTES_TRANSFERRED           0                               
#define M_DCB1_BYTES_TRANSFERRED           _DD_MAKEMASK(16, S_DCB1_BYTES_TRANSFERRED)
#define V_DCB1_BYTES_TRANSFERRED(x)        _DD_MAKEVALUE(x,S_DCB1_BYTES_TRANSFERRED)
#define G_DCB1_BYTES_TRANSFERRED(x)        _DD_GETVALUE(x, S_DCB1_BYTES_TRANSFERRED, M_DCB1_BYTES_TRANSFERRED)
#define S_DCB1_END_BIT                     16                              
#define M_DCB1_END_BIT                     _DD_MAKEMASK(1, S_DCB1_END_BIT) 
#define V_DCB1_END_BIT(x)                  _DD_MAKEVALUE(x,S_DCB1_END_BIT) 
#define G_DCB1_END_BIT(x)                  _DD_GETVALUE(x, S_DCB1_END_BIT, M_DCB1_END_BIT)
#define S_DCB1_START_BIT                   17                              
#define M_DCB1_START_BIT                   _DD_MAKEMASK(1, S_DCB1_START_BIT)
#define V_DCB1_START_BIT(x)                _DD_MAKEVALUE(x,S_DCB1_START_BIT)
#define G_DCB1_START_BIT(x)                _DD_GETVALUE(x, S_DCB1_START_BIT, M_DCB1_START_BIT)
#define S_DCB1_ERROR                       18                              
#define M_DCB1_ERROR                       _DD_MAKEMASK(1, S_DCB1_ERROR)   
#define V_DCB1_ERROR(x)                    _DD_MAKEVALUE(x,S_DCB1_ERROR)   
#define G_DCB1_ERROR(x)                    _DD_GETVALUE(x, S_DCB1_ERROR, M_DCB1_ERROR)
#define S_DCB1_DONE                        31                              
#define M_DCB1_DONE                        _DD_MAKEMASK(1, S_DCB1_DONE)    
#define V_DCB1_DONE(x)                     _DD_MAKEVALUE(x,S_DCB1_DONE)    
#define G_DCB1_DONE(x)                     _DD_GETVALUE(x, S_DCB1_DONE, M_DCB1_DONE)
#define S_DCB1_TIMESTAMP_UPPER             0                               
#define M_DCB1_TIMESTAMP_UPPER             _DD_MAKEMASK(32, S_DCB1_TIMESTAMP_UPPER)
#define V_DCB1_TIMESTAMP_UPPER(x)          _DD_MAKEVALUE(x,S_DCB1_TIMESTAMP_UPPER)
#define G_DCB1_TIMESTAMP_UPPER(x)          _DD_GETVALUE(x, S_DCB1_TIMESTAMP_UPPER, M_DCB1_TIMESTAMP_UPPER)
#define S_DCB1_INCOMING_TAG_STATUS         0                               
#define M_DCB1_INCOMING_TAG_STATUS         _DD_MAKEMASK(2, S_DCB1_INCOMING_TAG_STATUS)
#define V_DCB1_INCOMING_TAG_STATUS(x)      _DD_MAKEVALUE(x,S_DCB1_INCOMING_TAG_STATUS)
#define G_DCB1_INCOMING_TAG_STATUS(x)      _DD_GETVALUE(x, S_DCB1_INCOMING_TAG_STATUS, M_DCB1_INCOMING_TAG_STATUS)
#define S_DCB1_ING_OTAG_ACTION             2                               
#define M_DCB1_ING_OTAG_ACTION             _DD_MAKEMASK(2, S_DCB1_ING_OTAG_ACTION)
#define V_DCB1_ING_OTAG_ACTION(x)          _DD_MAKEVALUE(x,S_DCB1_ING_OTAG_ACTION)
#define G_DCB1_ING_OTAG_ACTION(x)          _DD_GETVALUE(x, S_DCB1_ING_OTAG_ACTION, M_DCB1_ING_OTAG_ACTION)
#define S_DCB1_ING_ITAG_ACTION             4                               
#define M_DCB1_ING_ITAG_ACTION             _DD_MAKEMASK(2, S_DCB1_ING_ITAG_ACTION)
#define V_DCB1_ING_ITAG_ACTION(x)          _DD_MAKEVALUE(x,S_DCB1_ING_ITAG_ACTION)
#define G_DCB1_ING_ITAG_ACTION(x)          _DD_GETVALUE(x, S_DCB1_ING_ITAG_ACTION, M_DCB1_ING_ITAG_ACTION)
#define S_DCB1_SD_TAG_PRESENT              6                               
#define M_DCB1_SD_TAG_PRESENT              _DD_MAKEMASK(1, S_DCB1_SD_TAG_PRESENT)
#define V_DCB1_SD_TAG_PRESENT(x)           _DD_MAKEVALUE(x,S_DCB1_SD_TAG_PRESENT)
#define G_DCB1_SD_TAG_PRESENT(x)           _DD_GETVALUE(x, S_DCB1_SD_TAG_PRESENT, M_DCB1_SD_TAG_PRESENT)
#define S_DCB1_SWITCH                      7                               
#define M_DCB1_SWITCH                      _DD_MAKEMASK(1, S_DCB1_SWITCH)  
#define V_DCB1_SWITCH(x)                   _DD_MAKEVALUE(x,S_DCB1_SWITCH)  
#define G_DCB1_SWITCH(x)                   _DD_GETVALUE(x, S_DCB1_SWITCH, M_DCB1_SWITCH)
#define S_DCB1_PKT_HIGIG_LOOKUP            8                               
#define M_DCB1_PKT_HIGIG_LOOKUP            _DD_MAKEMASK(1, S_DCB1_PKT_HIGIG_LOOKUP)
#define V_DCB1_PKT_HIGIG_LOOKUP(x)         _DD_MAKEVALUE(x,S_DCB1_PKT_HIGIG_LOOKUP)
#define G_DCB1_PKT_HIGIG_LOOKUP(x)         _DD_GETVALUE(x, S_DCB1_PKT_HIGIG_LOOKUP, M_DCB1_PKT_HIGIG_LOOKUP)
#define S_DCB1_SRC_HIGIG_TYPE              9                               
#define M_DCB1_SRC_HIGIG_TYPE              _DD_MAKEMASK(1, S_DCB1_SRC_HIGIG_TYPE)
#define V_DCB1_SRC_HIGIG_TYPE(x)           _DD_MAKEVALUE(x,S_DCB1_SRC_HIGIG_TYPE)
#define G_DCB1_SRC_HIGIG_TYPE(x)           _DD_GETVALUE(x, S_DCB1_SRC_HIGIG_TYPE, M_DCB1_SRC_HIGIG_TYPE)
#define S_DCB1_SRC_HG                      10                              
#define M_DCB1_SRC_HG                      _DD_MAKEMASK(1, S_DCB1_SRC_HG)  
#define V_DCB1_SRC_HG(x)                   _DD_MAKEVALUE(x,S_DCB1_SRC_HG)  
#define G_DCB1_SRC_HG(x)                   _DD_GETVALUE(x, S_DCB1_SRC_HG, M_DCB1_SRC_HG)
#define S_DCB1_IP_ROUTED                   11                              
#define M_DCB1_IP_ROUTED                   _DD_MAKEMASK(1, S_DCB1_IP_ROUTED)
#define V_DCB1_IP_ROUTED(x)                _DD_MAKEVALUE(x,S_DCB1_IP_ROUTED)
#define G_DCB1_IP_ROUTED(x)                _DD_GETVALUE(x, S_DCB1_IP_ROUTED, M_DCB1_IP_ROUTED)
#define S_DCB1_L3ONLY                      12                              
#define M_DCB1_L3ONLY                      _DD_MAKEMASK(1, S_DCB1_L3ONLY)  
#define V_DCB1_L3ONLY(x)                   _DD_MAKEVALUE(x,S_DCB1_L3ONLY)  
#define G_DCB1_L3ONLY(x)                   _DD_GETVALUE(x, S_DCB1_L3ONLY, M_DCB1_L3ONLY)
#define S_DCB1_VNTAG_ACTION                13                              
#define M_DCB1_VNTAG_ACTION                _DD_MAKEMASK(2, S_DCB1_VNTAG_ACTION)
#define V_DCB1_VNTAG_ACTION(x)             _DD_MAKEVALUE(x,S_DCB1_VNTAG_ACTION)
#define G_DCB1_VNTAG_ACTION(x)             _DD_GETVALUE(x, S_DCB1_VNTAG_ACTION, M_DCB1_VNTAG_ACTION)
#define S_DCB1_SPECIAL_PACKET_INDICATOR    15                              
#define M_DCB1_SPECIAL_PACKET_INDICATOR    _DD_MAKEMASK(1, S_DCB1_SPECIAL_PACKET_INDICATOR)
#define V_DCB1_SPECIAL_PACKET_INDICATOR(x) _DD_MAKEVALUE(x,S_DCB1_SPECIAL_PACKET_INDICATOR)
#define G_DCB1_SPECIAL_PACKET_INDICATOR(x) _DD_GETVALUE(x, S_DCB1_SPECIAL_PACKET_INDICATOR, M_DCB1_SPECIAL_PACKET_INDICATOR)
#define S_DCB1_DO_NOT_CHANGE_TTL           16                              
#define M_DCB1_DO_NOT_CHANGE_TTL           _DD_MAKEMASK(1, S_DCB1_DO_NOT_CHANGE_TTL)
#define V_DCB1_DO_NOT_CHANGE_TTL(x)        _DD_MAKEVALUE(x,S_DCB1_DO_NOT_CHANGE_TTL)
#define G_DCB1_DO_NOT_CHANGE_TTL(x)        _DD_GETVALUE(x, S_DCB1_DO_NOT_CHANGE_TTL, M_DCB1_DO_NOT_CHANGE_TTL)
#define S_DCB1_BPDU                        17                              
#define M_DCB1_BPDU                        _DD_MAKEMASK(1, S_DCB1_BPDU)    
#define V_DCB1_BPDU(x)                     _DD_MAKEVALUE(x,S_DCB1_BPDU)    
#define G_DCB1_BPDU(x)                     _DD_GETVALUE(x, S_DCB1_BPDU, M_DCB1_BPDU)
#define S_DCB1_TIMESTAMP_TYPE              18                              
#define M_DCB1_TIMESTAMP_TYPE              _DD_MAKEMASK(2, S_DCB1_TIMESTAMP_TYPE)
#define V_DCB1_TIMESTAMP_TYPE(x)           _DD_MAKEVALUE(x,S_DCB1_TIMESTAMP_TYPE)
#define G_DCB1_TIMESTAMP_TYPE(x)           _DD_GETVALUE(x, S_DCB1_TIMESTAMP_TYPE, M_DCB1_TIMESTAMP_TYPE)
#define S_DCB1_COS                         20                              
#define M_DCB1_COS                         _DD_MAKEMASK(4, S_DCB1_COS)     
#define V_DCB1_COS(x)                      _DD_MAKEVALUE(x,S_DCB1_COS)     
#define G_DCB1_COS(x)                      _DD_GETVALUE(x, S_DCB1_COS, M_DCB1_COS)
#define S_DCB1_IM_MTP_INDEX                24                              
#define M_DCB1_IM_MTP_INDEX                _DD_MAKEMASK(5, S_DCB1_IM_MTP_INDEX)
#define V_DCB1_IM_MTP_INDEX(x)             _DD_MAKEVALUE(x,S_DCB1_IM_MTP_INDEX)
#define G_DCB1_IM_MTP_INDEX(x)             _DD_GETVALUE(x, S_DCB1_IM_MTP_INDEX, M_DCB1_IM_MTP_INDEX)
#define S_DCB1_ECN                         29                              
#define M_DCB1_ECN                         _DD_MAKEMASK(2, S_DCB1_ECN)     
#define V_DCB1_ECN(x)                      _DD_MAKEVALUE(x,S_DCB1_ECN)     
#define G_DCB1_ECN(x)                      _DD_GETVALUE(x, S_DCB1_ECN, M_DCB1_ECN)
#define S_DCB1_CHANGE_ECN                  31                              
#define M_DCB1_CHANGE_ECN                  _DD_MAKEMASK(1, S_DCB1_CHANGE_ECN)
#define V_DCB1_CHANGE_ECN(x)               _DD_MAKEVALUE(x,S_DCB1_CHANGE_ECN)
#define G_DCB1_CHANGE_ECN(x)               _DD_GETVALUE(x, S_DCB1_CHANGE_ECN, M_DCB1_CHANGE_ECN)
#define S_DCB1_TIMESTAMP                   0                               
#define M_DCB1_TIMESTAMP                   _DD_MAKEMASK(32, S_DCB1_TIMESTAMP)
#define V_DCB1_TIMESTAMP(x)                _DD_MAKEVALUE(x,S_DCB1_TIMESTAMP)
#define G_DCB1_TIMESTAMP(x)                _DD_GETVALUE(x, S_DCB1_TIMESTAMP, M_DCB1_TIMESTAMP)
#define S_DCB1_VFI                         0                               
#define M_DCB1_VFI                         _DD_MAKEMASK(14, S_DCB1_VFI)    
#define V_DCB1_VFI(x)                      _DD_MAKEVALUE(x,S_DCB1_VFI)     
#define G_DCB1_VFI(x)                      _DD_GETVALUE(x, S_DCB1_VFI, M_DCB1_VFI)
#define S_DCB1_DSCP                        0                               
#define M_DCB1_DSCP                        _DD_MAKEMASK(6, S_DCB1_DSCP)    
#define V_DCB1_DSCP(x)                     _DD_MAKEVALUE(x,S_DCB1_DSCP)    
#define G_DCB1_DSCP(x)                     _DD_GETVALUE(x, S_DCB1_DSCP, M_DCB1_DSCP)
#define S_DCB1_CHANGE_DSCP                 6                               
#define M_DCB1_CHANGE_DSCP                 _DD_MAKEMASK(1, S_DCB1_CHANGE_DSCP)
#define V_DCB1_CHANGE_DSCP(x)              _DD_MAKEVALUE(x,S_DCB1_CHANGE_DSCP)
#define G_DCB1_CHANGE_DSCP(x)              _DD_GETVALUE(x, S_DCB1_CHANGE_DSCP, M_DCB1_CHANGE_DSCP)
#define S_DCB1_IMIRROR                     7                               
#define M_DCB1_IMIRROR                     _DD_MAKEMASK(1, S_DCB1_IMIRROR) 
#define V_DCB1_IMIRROR(x)                  _DD_MAKEVALUE(x,S_DCB1_IMIRROR) 
#define G_DCB1_IMIRROR(x)                  _DD_GETVALUE(x, S_DCB1_IMIRROR, M_DCB1_IMIRROR)
#define S_DCB1_EMIRROR                     8                               
#define M_DCB1_EMIRROR                     _DD_MAKEMASK(1, S_DCB1_EMIRROR) 
#define V_DCB1_EMIRROR(x)                  _DD_MAKEVALUE(x,S_DCB1_EMIRROR) 
#define G_DCB1_EMIRROR(x)                  _DD_GETVALUE(x, S_DCB1_EMIRROR, M_DCB1_EMIRROR)
#define S_DCB1_OUTER_CFI                   9                               
#define M_DCB1_OUTER_CFI                   _DD_MAKEMASK(1, S_DCB1_OUTER_CFI)
#define V_DCB1_OUTER_CFI(x)                _DD_MAKEVALUE(x,S_DCB1_OUTER_CFI)
#define G_DCB1_OUTER_CFI(x)                _DD_GETVALUE(x, S_DCB1_OUTER_CFI, M_DCB1_OUTER_CFI)
#define S_DCB1_OUTER_PRI                   10                              
#define M_DCB1_OUTER_PRI                   _DD_MAKEMASK(3, S_DCB1_OUTER_PRI)
#define V_DCB1_OUTER_PRI(x)                _DD_MAKEVALUE(x,S_DCB1_OUTER_PRI)
#define G_DCB1_OUTER_PRI(x)                _DD_GETVALUE(x, S_DCB1_OUTER_PRI, M_DCB1_OUTER_PRI)
#define S_DCB1_HG_COS                      13                              
#define M_DCB1_HG_COS                      _DD_MAKEMASK(5, S_DCB1_HG_COS)  
#define V_DCB1_HG_COS(x)                   _DD_MAKEVALUE(x,S_DCB1_HG_COS)  
#define G_DCB1_HG_COS(x)                   _DD_GETVALUE(x, S_DCB1_HG_COS, M_DCB1_HG_COS)
#define S_DCB1_INNER_VID                   18                              
#define M_DCB1_INNER_VID                   _DD_MAKEMASK(12, S_DCB1_INNER_VID)
#define V_DCB1_INNER_VID(x)                _DD_MAKEVALUE(x,S_DCB1_INNER_VID)
#define G_DCB1_INNER_VID(x)                _DD_GETVALUE(x, S_DCB1_INNER_VID, M_DCB1_INNER_VID)
#define S_DCB1_INNER_CFI                   30                              
#define M_DCB1_INNER_CFI                   _DD_MAKEMASK(1, S_DCB1_INNER_CFI)
#define V_DCB1_INNER_CFI(x)                _DD_MAKEVALUE(x,S_DCB1_INNER_CFI)
#define G_DCB1_INNER_CFI(x)                _DD_GETVALUE(x, S_DCB1_INNER_CFI, M_DCB1_INNER_CFI)
#define S_DCB1_REPLICATION                 31                              
#define M_DCB1_REPLICATION                 _DD_MAKEMASK(1, S_DCB1_REPLICATION)
#define V_DCB1_REPLICATION(x)              _DD_MAKEVALUE(x,S_DCB1_REPLICATION)
#define G_DCB1_REPLICATION(x)              _DD_GETVALUE(x, S_DCB1_REPLICATION, M_DCB1_REPLICATION)
#define S_DCB1_INNER_PRI                   0                               
#define M_DCB1_INNER_PRI                   _DD_MAKEMASK(3, S_DCB1_INNER_PRI)
#define V_DCB1_INNER_PRI(x)                _DD_MAKEVALUE(x,S_DCB1_INNER_PRI)
#define G_DCB1_INNER_PRI(x)                _DD_GETVALUE(x, S_DCB1_INNER_PRI, M_DCB1_INNER_PRI)
#define S_DCB1_REPLICATION_OR_NHOP_INDEX   3                               
#define M_DCB1_REPLICATION_OR_NHOP_INDEX   _DD_MAKEMASK(13, S_DCB1_REPLICATION_OR_NHOP_INDEX)
#define V_DCB1_REPLICATION_OR_NHOP_INDEX(x) _DD_MAKEVALUE(x,S_DCB1_REPLICATION_OR_NHOP_INDEX)
#define G_DCB1_REPLICATION_OR_NHOP_INDEX(x) _DD_GETVALUE(x, S_DCB1_REPLICATION_OR_NHOP_INDEX, M_DCB1_REPLICATION_OR_NHOP_INDEX)
#define S_DCB1_VLAN_COS                    16                              
#define M_DCB1_VLAN_COS                    _DD_MAKEMASK(5, S_DCB1_VLAN_COS)
#define V_DCB1_VLAN_COS(x)                 _DD_MAKEVALUE(x,S_DCB1_VLAN_COS)
#define G_DCB1_VLAN_COS(x)                 _DD_GETVALUE(x, S_DCB1_VLAN_COS, M_DCB1_VLAN_COS)
#define S_DCB1_SHAPING_COS_SEL             21                              
#define M_DCB1_SHAPING_COS_SEL             _DD_MAKEMASK(2, S_DCB1_SHAPING_COS_SEL)
#define V_DCB1_SHAPING_COS_SEL(x)          _DD_MAKEVALUE(x,S_DCB1_SHAPING_COS_SEL)
#define G_DCB1_SHAPING_COS_SEL(x)          _DD_GETVALUE(x, S_DCB1_SHAPING_COS_SEL, M_DCB1_SHAPING_COS_SEL)
#define S_DCB1_VFI_VALID                   23                              
#define M_DCB1_VFI_VALID                   _DD_MAKEMASK(1, S_DCB1_VFI_VALID)
#define V_DCB1_VFI_VALID(x)                _DD_MAKEVALUE(x,S_DCB1_VFI_VALID)
#define G_DCB1_VFI_VALID(x)                _DD_GETVALUE(x, S_DCB1_VFI_VALID, M_DCB1_VFI_VALID)
#define S_DCB1_EM_MTP_INDEX                24                              
#define M_DCB1_EM_MTP_INDEX                _DD_MAKEMASK(5, S_DCB1_EM_MTP_INDEX)
#define V_DCB1_EM_MTP_INDEX(x)             _DD_MAKEVALUE(x,S_DCB1_EM_MTP_INDEX)
#define G_DCB1_EM_MTP_INDEX(x)             _DD_GETVALUE(x, S_DCB1_EM_MTP_INDEX, M_DCB1_EM_MTP_INDEX)
#define S_DCB1_SPECIAL_PACKET_TYPE         29                              
#define M_DCB1_SPECIAL_PACKET_TYPE         _DD_MAKEMASK(3, S_DCB1_SPECIAL_PACKET_TYPE)
#define V_DCB1_SPECIAL_PACKET_TYPE(x)      _DD_MAKEVALUE(x,S_DCB1_SPECIAL_PACKET_TYPE)
#define G_DCB1_SPECIAL_PACKET_TYPE(x)      _DD_GETVALUE(x, S_DCB1_SPECIAL_PACKET_TYPE, M_DCB1_SPECIAL_PACKET_TYPE)
#define S_DCB1_MODULE_HEADER               0                               
#define M_DCB1_MODULE_HEADER               _DD_MAKEMASK(128, S_DCB1_MODULE_HEADER)
#define V_DCB1_MODULE_HEADER(x)            _DD_MAKEVALUE(x,S_DCB1_MODULE_HEADER)
#define G_DCB1_MODULE_HEADER(x)            _DD_GETVALUE(x, S_DCB1_MODULE_HEADER, M_DCB1_MODULE_HEADER)
#define S_DCB1_SRC_PORT                    0                               
#define M_DCB1_SRC_PORT                    _DD_MAKEMASK(8, S_DCB1_SRC_PORT)
#define V_DCB1_SRC_PORT(x)                 _DD_MAKEVALUE(x,S_DCB1_SRC_PORT)
#define G_DCB1_SRC_PORT(x)                 _DD_GETVALUE(x, S_DCB1_SRC_PORT, M_DCB1_SRC_PORT)
#define S_DCB1_PKT_LENGTH                  8                               
#define M_DCB1_PKT_LENGTH                  _DD_MAKEMASK(14, S_DCB1_PKT_LENGTH)
#define V_DCB1_PKT_LENGTH(x)               _DD_MAKEVALUE(x,S_DCB1_PKT_LENGTH)
#define G_DCB1_PKT_LENGTH(x)               _DD_GETVALUE(x, S_DCB1_PKT_LENGTH, M_DCB1_PKT_LENGTH)
#define S_DCB1_MATCHED_RULE                22                              
#define M_DCB1_MATCHED_RULE                _DD_MAKEMASK(8, S_DCB1_MATCHED_RULE)
#define V_DCB1_MATCHED_RULE(x)             _DD_MAKEVALUE(x,S_DCB1_MATCHED_RULE)
#define G_DCB1_MATCHED_RULE(x)             _DD_GETVALUE(x, S_DCB1_MATCHED_RULE, M_DCB1_MATCHED_RULE)
#define S_DCB1_HGI                         30                              
#define M_DCB1_HGI                         _DD_MAKEMASK(2, S_DCB1_HGI)     
#define V_DCB1_HGI(x)                      _DD_MAKEVALUE(x,S_DCB1_HGI)     
#define G_DCB1_HGI(x)                      _DD_GETVALUE(x, S_DCB1_HGI, M_DCB1_HGI)
#define S_DCB1_CPU_COS                     0                               
#define M_DCB1_CPU_COS                     _DD_MAKEMASK(6, S_DCB1_CPU_COS) 
#define V_DCB1_CPU_COS(x)                  _DD_MAKEVALUE(x,S_DCB1_CPU_COS) 
#define G_DCB1_CPU_COS(x)                  _DD_GETVALUE(x, S_DCB1_CPU_COS, M_DCB1_CPU_COS)
#define S_DCB1_REGEN_CRC                   6                               
#define M_DCB1_REGEN_CRC                   _DD_MAKEMASK(1, S_DCB1_REGEN_CRC)
#define V_DCB1_REGEN_CRC(x)                _DD_MAKEVALUE(x,S_DCB1_REGEN_CRC)
#define G_DCB1_REGEN_CRC(x)                _DD_GETVALUE(x, S_DCB1_REGEN_CRC, M_DCB1_REGEN_CRC)
#define S_DCB1_CPU_OPCODE_TYPE             16                              
#define M_DCB1_CPU_OPCODE_TYPE             _DD_MAKEMASK(4, S_DCB1_CPU_OPCODE_TYPE)
#define V_DCB1_CPU_OPCODE_TYPE(x)          _DD_MAKEVALUE(x,S_DCB1_CPU_OPCODE_TYPE)
#define G_DCB1_CPU_OPCODE_TYPE(x)          _DD_GETVALUE(x, S_DCB1_CPU_OPCODE_TYPE, M_DCB1_CPU_OPCODE_TYPE)
#define S_DCB1_OUTER_VID                   20                              
#define M_DCB1_OUTER_VID                   _DD_MAKEMASK(12, S_DCB1_OUTER_VID)
#define V_DCB1_OUTER_VID(x)                _DD_MAKEVALUE(x,S_DCB1_OUTER_VID)
#define G_DCB1_OUTER_VID(x)                _DD_GETVALUE(x, S_DCB1_OUTER_VID, M_DCB1_OUTER_VID)
#define S_DCB1_REASON                      0                               
#define M_DCB1_REASON                      _DD_MAKEMASK(64, S_DCB1_REASON) 
#define V_DCB1_REASON(x)                   _DD_MAKEVALUE(x,S_DCB1_REASON)  
#define G_DCB1_REASON(x)                   _DD_GETVALUE(x, S_DCB1_REASON, M_DCB1_REASON)
#define S_DCB1_BYTE_COUNT                  0                               
#define M_DCB1_BYTE_COUNT                  _DD_MAKEMASK(16, S_DCB1_BYTE_COUNT)
#define V_DCB1_BYTE_COUNT(x)               _DD_MAKEVALUE(x,S_DCB1_BYTE_COUNT)
#define G_DCB1_BYTE_COUNT(x)               _DD_GETVALUE(x, S_DCB1_BYTE_COUNT, M_DCB1_BYTE_COUNT)
#define S_DCB1_CHAIN                       16                              
#define M_DCB1_CHAIN                       _DD_MAKEMASK(1, S_DCB1_CHAIN)   
#define V_DCB1_CHAIN(x)                    _DD_MAKEVALUE(x,S_DCB1_CHAIN)   
#define G_DCB1_CHAIN(x)                    _DD_GETVALUE(x, S_DCB1_CHAIN, M_DCB1_CHAIN)
#define S_DCB1_SG                          17                              
#define M_DCB1_SG                          _DD_MAKEMASK(1, S_DCB1_SG)      
#define V_DCB1_SG(x)                       _DD_MAKEVALUE(x,S_DCB1_SG)      
#define G_DCB1_SG(x)                       _DD_GETVALUE(x, S_DCB1_SG, M_DCB1_SG)
#define S_DCB1_RELOAD                      18                              
#define M_DCB1_RELOAD                      _DD_MAKEMASK(1, S_DCB1_RELOAD)  
#define V_DCB1_RELOAD(x)                   _DD_MAKEVALUE(x,S_DCB1_RELOAD)  
#define G_DCB1_RELOAD(x)                   _DD_GETVALUE(x, S_DCB1_RELOAD, M_DCB1_RELOAD)
#define S_DCB1_ADDR                        0                               
#define M_DCB1_ADDR                        _DD_MAKEMASK(32, S_DCB1_ADDR)   
#define V_DCB1_ADDR(x)                     _DD_MAKEVALUE(x,S_DCB1_ADDR)    
#define G_DCB1_ADDR(x)                     _DD_GETVALUE(x, S_DCB1_ADDR, M_DCB1_ADDR)
/* Phase 0 of S-bus message  */
#define S_SMHDR_NACK                       0                               
#define M_SMHDR_NACK                       _DD_MAKEMASK(1, S_SMHDR_NACK)   
#define V_SMHDR_NACK(x)                    _DD_MAKEVALUE(x,S_SMHDR_NACK)   
#define G_SMHDR_NACK(x)                    _DD_GETVALUE(x, S_SMHDR_NACK, M_SMHDR_NACK)
#define S_SMHDR_BANK                       1                               
#define M_SMHDR_BANK                       _DD_MAKEMASK(2, S_SMHDR_BANK)   
#define V_SMHDR_BANK(x)                    _DD_MAKEVALUE(x,S_SMHDR_BANK)   
#define G_SMHDR_BANK(x)                    _DD_GETVALUE(x, S_SMHDR_BANK, M_SMHDR_BANK)
#define S_SMHDR_DMA                        3                               
#define M_SMHDR_DMA                        _DD_MAKEMASK(1, S_SMHDR_DMA)    
#define V_SMHDR_DMA(x)                     _DD_MAKEVALUE(x,S_SMHDR_DMA)    
#define G_SMHDR_DMA(x)                     _DD_GETVALUE(x, S_SMHDR_DMA, M_SMHDR_DMA)
#define S_SMHDR_ECODE                      4                               
#define M_SMHDR_ECODE                      _DD_MAKEMASK(2, S_SMHDR_ECODE)  
#define V_SMHDR_ECODE(x)                   _DD_MAKEVALUE(x,S_SMHDR_ECODE)  
#define G_SMHDR_ECODE(x)                   _DD_GETVALUE(x, S_SMHDR_ECODE, M_SMHDR_ECODE)
#define S_SMHDR_ERR                        6                               
#define M_SMHDR_ERR                        _DD_MAKEMASK(1, S_SMHDR_ERR)    
#define V_SMHDR_ERR(x)                     _DD_MAKEVALUE(x,S_SMHDR_ERR)    
#define G_SMHDR_ERR(x)                     _DD_GETVALUE(x, S_SMHDR_ERR, M_SMHDR_ERR)
#define S_SMHDR_DATA_LEN                   7                               
#define M_SMHDR_DATA_LEN                   _DD_MAKEMASK(7, S_SMHDR_DATA_LEN)
#define V_SMHDR_DATA_LEN(x)                _DD_MAKEVALUE(x,S_SMHDR_DATA_LEN)
#define G_SMHDR_DATA_LEN(x)                _DD_GETVALUE(x, S_SMHDR_DATA_LEN, M_SMHDR_DATA_LEN)
#define S_SMHDR_ACC                        14                              
#define M_SMHDR_ACC                        _DD_MAKEMASK(5, S_SMHDR_ACC)    
#define V_SMHDR_ACC(x)                     _DD_MAKEVALUE(x,S_SMHDR_ACC)    
#define G_SMHDR_ACC(x)                     _DD_GETVALUE(x, S_SMHDR_ACC, M_SMHDR_ACC)
#define S_SMHDR_DEST_BLOCK                 19                              
#define M_SMHDR_DEST_BLOCK                 _DD_MAKEMASK(7, S_SMHDR_DEST_BLOCK)
#define V_SMHDR_DEST_BLOCK(x)              _DD_MAKEVALUE(x,S_SMHDR_DEST_BLOCK)
#define G_SMHDR_DEST_BLOCK(x)              _DD_GETVALUE(x, S_SMHDR_DEST_BLOCK, M_SMHDR_DEST_BLOCK)
#define S_SMHDR_OP_CODE                    26                              
#define M_SMHDR_OP_CODE                    _DD_MAKEMASK(6, S_SMHDR_OP_CODE)
#define V_SMHDR_OP_CODE(x)                 _DD_MAKEVALUE(x,S_SMHDR_OP_CODE)
#define G_SMHDR_OP_CODE(x)                 _DD_GETVALUE(x, S_SMHDR_OP_CODE, M_SMHDR_OP_CODE)
#endif /* __BCM5343X_REGS_H__ */
